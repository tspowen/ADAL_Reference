items:
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.UserAssertion
  id: UserAssertion
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory
  children:
  - Microsoft.IdentityModel.Clients.ActiveDirectory.UserAssertion.#ctor(System.String)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.UserAssertion.#ctor(System.String,System.String)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.UserAssertion.#ctor(System.String,System.String,System.String)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.UserAssertion.Assertion
  - Microsoft.IdentityModel.Clients.ActiveDirectory.UserAssertion.AssertionType
  - Microsoft.IdentityModel.Clients.ActiveDirectory.UserAssertion.UserName
  langs:
  - csharp
  - vb
  name: UserAssertion
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.UserAssertion
  type: Class
  source:
    remote:
      path: src/ADAL.Common/UserAssertion.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.Common/UserAssertion.cs
    startLine: 25
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Credential type containing an assertion representing user credential.
  example: []
  syntax:
    content: public sealed class UserAssertion
    content.vb: Public NotInheritable Class UserAssertion
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  platform:
  - net40
  - rt
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.UserAssertion.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.UserAssertion
  langs:
  - csharp
  - vb
  name: UserAssertion(String)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.UserAssertion.UserAssertion(System.String)
  type: Constructor
  source:
    remote:
      path: src/ADAL.Common/UserAssertion.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.Common/UserAssertion.cs
    startLine: 32
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: >-
    Constructor to create the object with an assertion. This constructor can be used for On Behalf Of flow which assumes the

    assertion is a JWT token. For other flows, the other construction with assertionType must be used.
  example: []
  syntax:
    content: public UserAssertion(string assertion)
    content.vb: Public Sub New(assertion As String)
    parameters:
    - id: assertion
      type: System.String
      description: Assertion representing the user.
  platform:
  - net40
  - rt
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.UserAssertion.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.UserAssertion
  langs:
  - csharp
  - vb
  name: UserAssertion(String, String)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.UserAssertion.UserAssertion(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/ADAL.Common/UserAssertion.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.Common/UserAssertion.cs
    startLine: 47
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Constructor to create credential with client id, assertion and assertionType
  example: []
  syntax:
    content: public UserAssertion(string assertion, string assertionType)
    content.vb: Public Sub New(assertion As String, assertionType As String)
    parameters:
    - id: assertion
      type: System.String
      description: Assertion representing the user.
    - id: assertionType
      type: System.String
      description: Type of the assertion representing the user.
  platform:
  - net40
  - rt
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.UserAssertion.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.UserAssertion
  langs:
  - csharp
  - vb
  name: UserAssertion(String, String, String)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.UserAssertion.UserAssertion(System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/ADAL.Common/UserAssertion.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.Common/UserAssertion.cs
    startLine: 58
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Constructor to create credential with client id, assertion, assertionType and userId
  example: []
  syntax:
    content: public UserAssertion(string assertion, string assertionType, string userName)
    content.vb: Public Sub New(assertion As String, assertionType As String, userName As String)
    parameters:
    - id: assertion
      type: System.String
      description: Assertion representing the user.
    - id: assertionType
      type: System.String
      description: Type of the assertion representing the user.
    - id: userName
      type: System.String
      description: Identity of the user token is requested for. This parameter can be null.
  platform:
  - net40
  - rt
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.UserAssertion.Assertion
  id: Assertion
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.UserAssertion
  langs:
  - csharp
  - vb
  name: Assertion
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.UserAssertion.Assertion
  type: Property
  source:
    remote:
      path: src/ADAL.Common/UserAssertion.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.Common/UserAssertion.cs
    startLine: 78
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Gets the assertion.
  example: []
  syntax:
    content: public string Assertion { get; }
    content.vb: Public ReadOnly Property Assertion As String
    parameters: []
    return:
      type: System.String
  platform:
  - net40
  - rt
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.UserAssertion.AssertionType
  id: AssertionType
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.UserAssertion
  langs:
  - csharp
  - vb
  name: AssertionType
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.UserAssertion.AssertionType
  type: Property
  source:
    remote:
      path: src/ADAL.Common/UserAssertion.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.Common/UserAssertion.cs
    startLine: 83
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Gets the assertion type.
  example: []
  syntax:
    content: public string AssertionType { get; }
    content.vb: Public ReadOnly Property AssertionType As String
    parameters: []
    return:
      type: System.String
  platform:
  - net40
  - rt
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.UserAssertion.UserName
  id: UserName
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.UserAssertion
  langs:
  - csharp
  - vb
  name: UserName
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.UserAssertion.UserName
  type: Property
  source:
    remote:
      path: src/ADAL.Common/UserAssertion.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.Common/UserAssertion.cs
    startLine: 88
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Gets name of the user.
  example: []
  syntax:
    content: public string UserName { get; }
    content.vb: Public ReadOnly Property UserName As String
    parameters: []
    return:
      type: System.String
  platform:
  - net40
  - rt
references:
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory
  isExternal: false
  name: Microsoft.IdentityModel.Clients.ActiveDirectory
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
metadata: {}
