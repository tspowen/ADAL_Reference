items:
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  id: AuthenticationContext
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory
  children:
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.#ctor(System.String)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.#ctor(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.#ctor(System.String,System.Boolean)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.#ctor(System.String,System.Boolean,Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireToken(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertion)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireToken(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertion,Microsoft.IdentityModel.Clients.ActiveDirectory.UserAssertion)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireToken(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireToken(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate,Microsoft.IdentityModel.Clients.ActiveDirectory.UserAssertion)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireToken(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireToken(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential,Microsoft.IdentityModel.Clients.ActiveDirectory.UserAssertion)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireToken(System.String,System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.UserAssertion)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireToken(System.String,System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.UserCredential)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireToken(System.String,System.String,System.Uri)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireToken(System.String,System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.PromptBehavior)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireToken(System.String,System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.PromptBehavior,Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireToken(System.String,System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.PromptBehavior,Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier,System.String)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenAndContinue(System.String,System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContextDelegate)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenAndContinue(System.String,System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier,Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContextDelegate)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenAndContinue(System.String,System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier,System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContextDelegate)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenAndContinue(System.String,System.String,Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContextDelegate)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenAndContinue(System.String,System.String,Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier,Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContextDelegate)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenAndContinue(System.String,System.String,Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier,System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContextDelegate)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenAsync(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertion)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenAsync(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertion,Microsoft.IdentityModel.Clients.ActiveDirectory.UserAssertion)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenAsync(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenAsync(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate,Microsoft.IdentityModel.Clients.ActiveDirectory.UserAssertion)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenAsync(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenAsync(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential,Microsoft.IdentityModel.Clients.ActiveDirectory.UserAssertion)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenAsync(System.String,System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.UserAssertion)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenAsync(System.String,System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.UserCredential)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenAsync(System.String,System.String,System.Uri)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenAsync(System.String,System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.PromptBehavior)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenAsync(System.String,System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.PromptBehavior,Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenAsync(System.String,System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.PromptBehavior,Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier,System.String)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByAuthorizationCode(System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertion)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByAuthorizationCode(System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertion,System.String)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByAuthorizationCode(System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByAuthorizationCode(System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate,System.String)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByAuthorizationCode(System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByAuthorizationCode(System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential,System.String)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByAuthorizationCodeAsync(System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertion)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByAuthorizationCodeAsync(System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertion,System.String)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByAuthorizationCodeAsync(System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByAuthorizationCodeAsync(System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate,System.String)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByAuthorizationCodeAsync(System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByAuthorizationCodeAsync(System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential,System.String)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByRefreshToken(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertion)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByRefreshToken(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertion,System.String)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByRefreshToken(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByRefreshToken(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate,System.String)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByRefreshToken(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByRefreshToken(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential,System.String)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByRefreshToken(System.String,System.String)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByRefreshToken(System.String,System.String,System.String)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByRefreshTokenAsync(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertion)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByRefreshTokenAsync(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertion,System.String)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByRefreshTokenAsync(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByRefreshTokenAsync(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate,System.String)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByRefreshTokenAsync(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByRefreshTokenAsync(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential,System.String)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByRefreshTokenAsync(System.String,System.String)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByRefreshTokenAsync(System.String,System.String,System.String)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenSilent(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertion,Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenSilent(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate,Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenSilent(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential,Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenSilent(System.String,System.String)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenSilent(System.String,System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenSilentAsync(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertion,Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenSilentAsync(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate,Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenSilentAsync(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential,Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenSilentAsync(System.String,System.String)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenSilentAsync(System.String,System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.Authority
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.ContinueAcquireTokenAsync(IWebAuthenticationBrokerContinuationEventArgs)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.ContinueAcquireTokenAsync(Windows.ApplicationModel.Activation.IWebAuthenticationBrokerContinuationEventArgs)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.CorrelationId
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.CreateAsync(System.String)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.CreateAsync(System.String,System.Boolean)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.CreateAsync(System.String,System.Boolean,Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.CreateAsync(System.String,System.Boolean,Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache,Guid)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.CreateAsync(System.String,System.Boolean,Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache,System.Guid)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.GetAuthorizationRequestURL(System.String,System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier,System.String)
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.OwnerWindow
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.TokenCache
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.UseCorporateNetwork
  - Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.ValidateAuthority
  langs:
  - csharp
  - vb
  name: AuthenticationContext
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  type: Class
  source:
    remote:
      path: src/ADAL.NET/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.NET/AuthenticationContext.cs
    startLine: 27
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: The AuthenticationContext class retrieves authentication tokens from Azure Active Directory and ADFS services.
  example: []
  syntax:
    content: public sealed class AuthenticationContext
    content.vb: Public NotInheritable Class AuthenticationContext
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  platform:
  - net40
  - rt
  - sl
  - wp8
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: AuthenticationContext(String)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AuthenticationContext(System.String)
  type: Constructor
  source:
    remote:
      path: src/ADAL.Common/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.Common/AuthenticationContext.cs
    startLine: 51
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: >-
    Constructor to create the context with the address of the authority.

    Using this constructor will turn ON validation of the authority URL by default if validation is supported for the authority address.
  example: []
  syntax:
    content: public AuthenticationContext(string authority)
    content.vb: Public Sub New(authority As String)
    parameters:
    - id: authority
      type: System.String
      description: Address of the authority to issue token.
  platform:
  - net40
  - rt
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.#ctor(System.String,System.Boolean)
  id: '#ctor(System.String,System.Boolean)'
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: AuthenticationContext(String, Boolean)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AuthenticationContext(System.String, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/ADAL.Common/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.Common/AuthenticationContext.cs
    startLine: 66
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: >-
    Constructor to create the context with the address of the authority and flag to turn address validation off.

    Using this constructor, address validation can be turned off. Make sure you are aware of the security implication of not validating the address.
  example: []
  syntax:
    content: public AuthenticationContext(string authority, bool validateAuthority)
    content.vb: Public Sub New(authority As String, validateAuthority As Boolean)
    parameters:
    - id: authority
      type: System.String
      description: Address of the authority to issue token.
    - id: validateAuthority
      type: System.Boolean
      description: Flag to turn address validation ON or OFF.
  platform:
  - net40
  - rt
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.#ctor(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache)
  id: '#ctor(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache)'
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: AuthenticationContext(String, TokenCache)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AuthenticationContext(System.String, Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache)
  type: Constructor
  source:
    remote:
      path: src/ADAL.Common/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.Common/AuthenticationContext.cs
    startLine: 79
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: >-
    Constructor to create the context with the address of the authority.

    Using this constructor will turn ON validation of the authority URL by default if validation is supported for the authority address.
  example: []
  syntax:
    content: public AuthenticationContext(string authority, TokenCache tokenCache)
    content.vb: Public Sub New(authority As String, tokenCache As TokenCache)
    parameters:
    - id: authority
      type: System.String
      description: Address of the authority to issue token.
    - id: tokenCache
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache
      description: Token cache used to lookup cached tokens on calls to AcquireToken
  platform:
  - net40
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.#ctor(System.String,System.Boolean,Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache)
  id: '#ctor(System.String,System.Boolean,Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache)'
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: AuthenticationContext(String, Boolean, TokenCache)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AuthenticationContext(System.String, System.Boolean, Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache)
  type: Constructor
  source:
    remote:
      path: src/ADAL.Common/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.Common/AuthenticationContext.cs
    startLine: 95
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: >-
    Constructor to create the context with the address of the authority and flag to turn address validation off.

    Using this constructor, address validation can be turned off. Make sure you are aware of the security implication of not validating the address.
  example: []
  syntax:
    content: public AuthenticationContext(string authority, bool validateAuthority, TokenCache tokenCache)
    content.vb: Public Sub New(authority As String, validateAuthority As Boolean, tokenCache As TokenCache)
    parameters:
    - id: authority
      type: System.String
      description: Address of the authority to issue token.
    - id: validateAuthority
      type: System.Boolean
      description: Flag to turn address validation ON or OFF.
    - id: tokenCache
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache
      description: Token cache used to lookup cached tokens on calls to AcquireToken
  platform:
  - net40
  - rt
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.Authority
  id: Authority
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: Authority
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.Authority
  type: Property
  source:
    remote:
      path: src/ADAL.Common/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.Common/AuthenticationContext.cs
    startLine: 112
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Gets address of the authority to issue token.
  example: []
  syntax:
    content: public string Authority { get; }
    content.vb: Public ReadOnly Property Authority As String
    parameters: []
    return:
      type: System.String
  platform:
  - net40
  - rt
  - sl
  - wp8
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.ValidateAuthority
  id: ValidateAuthority
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: ValidateAuthority
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.ValidateAuthority
  type: Property
  source:
    remote:
      path: src/ADAL.Common/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.Common/AuthenticationContext.cs
    startLine: 123
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Gets a value indicating whether address validation is ON or OFF.
  example: []
  syntax:
    content: public bool ValidateAuthority { get; }
    content.vb: Public ReadOnly Property ValidateAuthority As Boolean
    parameters: []
    return:
      type: System.Boolean
  platform:
  - net40
  - rt
  - sl
  - wp8
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.TokenCache
  id: TokenCache
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: TokenCache
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.TokenCache
  type: Property
  source:
    remote:
      path: src/ADAL.Common/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.Common/AuthenticationContext.cs
    startLine: 149
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Gets the TokenCache
  remarks: >-
    By default, TokenCache is an in-memory collection of key/value pairs.

    Library will automatically save tokens in the cache when AcquireToken is called.

    The default token cache is static so all tokens will available to all instances of AuthenticationContext. To use a custom TokenCache pass one to the <xref href="Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext" data-throw-if-not-resolved="false"></xref>.

    To turn OFF token caching, use the constructor and set TokenCache to null.
  example: []
  syntax:
    content: public TokenCache TokenCache { get; }
    content.vb: Public ReadOnly Property TokenCache As TokenCache
    parameters: []
    return:
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache
  platform:
  - net40
  - rt
  - sl
  - wp8
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.CorrelationId
  id: CorrelationId
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: CorrelationId
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.CorrelationId
  type: Property
  source:
    remote:
      path: src/ADAL.Common/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.Common/AuthenticationContext.cs
    startLine: 155
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: >-
    Gets or sets correlation Id which would be sent to the service with the next request.

    Correlation Id is to be used for diagnostics purposes.
  example: []
  syntax:
    content: public Guid CorrelationId { get; set; }
    content.vb: Public Property CorrelationId As Guid
    parameters: []
    return:
      type: System.Guid
  platform:
  - net40
  - rt
  - sl
  - wp8
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.OwnerWindow
  id: OwnerWindow
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: OwnerWindow
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.OwnerWindow
  type: Property
  source:
    remote:
      path: src/ADAL.NET/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.NET/AuthenticationContext.cs
    startLine: 34
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Gets or sets the owner of the browser dialog which pops up for receiving user credentials. It can be null.
  example: []
  syntax:
    content: public object OwnerWindow { get; set; }
    content.vb: Public Property OwnerWindow As Object
    parameters: []
    return:
      type: System.Object
  platform:
  - net40
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenAsync(System.String,System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.UserCredential)
  id: AcquireTokenAsync(System.String,System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.UserCredential)
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: AcquireTokenAsync(String, String, UserCredential)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenAsync(System.String, System.String, Microsoft.IdentityModel.Clients.ActiveDirectory.UserCredential)
  type: Method
  source:
    remote:
      path: src/ADAL.NET/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.NET/AuthenticationContext.cs
    startLine: 55
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Acquires security token from the authority.
  example: []
  syntax:
    content: public Task<AuthenticationResult> AcquireTokenAsync(string resource, string clientId, UserCredential userCredential)
    content.vb: Public Function AcquireTokenAsync(resource As String, clientId As String, userCredential As UserCredential) As Task(Of AuthenticationResult)
    parameters:
    - id: resource
      type: System.String
      description: Identifier of the target resource that is the recipient of the requested token.
    - id: clientId
      type: System.String
      description: Identifier of the client requesting the token.
    - id: userCredential
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.UserCredential
      description: The user credential to use for token acquisition.
    return:
      type: System.Threading.Tasks.Task{Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult}
      description: It contains Access Token, Refresh Token and the Access Token's expiration time.
  platform:
  - net40
  - rt
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenAsync(System.String,System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.UserAssertion)
  id: AcquireTokenAsync(System.String,System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.UserAssertion)
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: AcquireTokenAsync(String, String, UserAssertion)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenAsync(System.String, System.String, Microsoft.IdentityModel.Clients.ActiveDirectory.UserAssertion)
  type: Method
  source:
    remote:
      path: src/ADAL.NET/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.NET/AuthenticationContext.cs
    startLine: 67
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Acquires security token from the authority.
  example: []
  syntax:
    content: public Task<AuthenticationResult> AcquireTokenAsync(string resource, string clientId, UserAssertion userAssertion)
    content.vb: Public Function AcquireTokenAsync(resource As String, clientId As String, userAssertion As UserAssertion) As Task(Of AuthenticationResult)
    parameters:
    - id: resource
      type: System.String
      description: Identifier of the target resource that is the recipient of the requested token.
    - id: clientId
      type: System.String
      description: Identifier of the client requesting the token.
    - id: userAssertion
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.UserAssertion
      description: The assertion to use for token acquisition.
    return:
      type: System.Threading.Tasks.Task{Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult}
      description: It contains Access Token and the Access Token's expiration time. Refresh Token property will be null for this overload.
  platform:
  - net40
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenAsync(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential)
  id: AcquireTokenAsync(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential)
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: AcquireTokenAsync(String, ClientCredential)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenAsync(System.String, Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential)
  type: Method
  source:
    remote:
      path: src/ADAL.NET/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.NET/AuthenticationContext.cs
    startLine: 78
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Acquires security token from the authority.
  example: []
  syntax:
    content: public Task<AuthenticationResult> AcquireTokenAsync(string resource, ClientCredential clientCredential)
    content.vb: Public Function AcquireTokenAsync(resource As String, clientCredential As ClientCredential) As Task(Of AuthenticationResult)
    parameters:
    - id: resource
      type: System.String
      description: Identifier of the target resource that is the recipient of the requested token.
    - id: clientCredential
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential
      description: The client credential to use for token acquisition.
    return:
      type: System.Threading.Tasks.Task{Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult}
      description: It contains Access Token and the Access Token's expiration time. Refresh Token property will be null for this overload.
  platform:
  - net40
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenAsync(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate)
  id: AcquireTokenAsync(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate)
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: AcquireTokenAsync(String, ClientAssertionCertificate)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenAsync(System.String, Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate)
  type: Method
  source:
    remote:
      path: src/ADAL.NET/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.NET/AuthenticationContext.cs
    startLine: 89
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Acquires security token from the authority.
  example: []
  syntax:
    content: public Task<AuthenticationResult> AcquireTokenAsync(string resource, ClientAssertionCertificate clientCertificate)
    content.vb: Public Function AcquireTokenAsync(resource As String, clientCertificate As ClientAssertionCertificate) As Task(Of AuthenticationResult)
    parameters:
    - id: resource
      type: System.String
      description: Identifier of the target resource that is the recipient of the requested token.
    - id: clientCertificate
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate
      description: The client certificate to use for token acquisition.
    return:
      type: System.Threading.Tasks.Task{Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult}
      description: It contains Access Token and the Access Token's expiration time. Refresh Token property will be null for this overload.
  platform:
  - net40
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenAsync(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertion)
  id: AcquireTokenAsync(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertion)
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: AcquireTokenAsync(String, ClientAssertion)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenAsync(System.String, Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertion)
  type: Method
  source:
    remote:
      path: src/ADAL.NET/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.NET/AuthenticationContext.cs
    startLine: 100
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Acquires security token from the authority.
  example: []
  syntax:
    content: public Task<AuthenticationResult> AcquireTokenAsync(string resource, ClientAssertion clientAssertion)
    content.vb: Public Function AcquireTokenAsync(resource As String, clientAssertion As ClientAssertion) As Task(Of AuthenticationResult)
    parameters:
    - id: resource
      type: System.String
      description: Identifier of the target resource that is the recipient of the requested token.
    - id: clientAssertion
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertion
      description: The client assertion to use for token acquisition.
    return:
      type: System.Threading.Tasks.Task{Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult}
      description: It contains Access Token and the Access Token's expiration time. Refresh Token property will be null for this overload.
  platform:
  - net40
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByAuthorizationCodeAsync(System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential)
  id: AcquireTokenByAuthorizationCodeAsync(System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential)
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: AcquireTokenByAuthorizationCodeAsync(String, Uri, ClientCredential)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByAuthorizationCodeAsync(System.String, System.Uri, Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential)
  type: Method
  source:
    remote:
      path: src/ADAL.NET/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.NET/AuthenticationContext.cs
    startLine: 113
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: >-
    Acquires security token from the authority using authorization code previously received.

    This method does not lookup token cache, but stores the result in it, so it can be looked up using other methods such as <xref href="Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenSilentAsync(System.String,System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public Task<AuthenticationResult> AcquireTokenByAuthorizationCodeAsync(string authorizationCode, Uri redirectUri, ClientCredential clientCredential)
    content.vb: Public Function AcquireTokenByAuthorizationCodeAsync(authorizationCode As String, redirectUri As Uri, clientCredential As ClientCredential) As Task(Of AuthenticationResult)
    parameters:
    - id: authorizationCode
      type: System.String
      description: The authorization code received from service authorization endpoint.
    - id: redirectUri
      type: System.Uri
      description: Address to return to upon receiving a response from the authority.
    - id: clientCredential
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential
      description: The credential to use for token acquisition.
    return:
      type: System.Threading.Tasks.Task{Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult}
      description: It contains Access Token, Refresh Token and the Access Token's expiration time.
  platform:
  - net40
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByAuthorizationCodeAsync(System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential,System.String)
  id: AcquireTokenByAuthorizationCodeAsync(System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential,System.String)
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: AcquireTokenByAuthorizationCodeAsync(String, Uri, ClientCredential, String)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByAuthorizationCodeAsync(System.String, System.Uri, Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential, System.String)
  type: Method
  source:
    remote:
      path: src/ADAL.NET/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.NET/AuthenticationContext.cs
    startLine: 127
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: >-
    Acquires security token from the authority using an authorization code previously received.

    This method does not lookup token cache, but stores the result in it, so it can be looked up using other methods such as <xref href="Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenSilentAsync(System.String,System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public Task<AuthenticationResult> AcquireTokenByAuthorizationCodeAsync(string authorizationCode, Uri redirectUri, ClientCredential clientCredential, string resource)
    content.vb: Public Function AcquireTokenByAuthorizationCodeAsync(authorizationCode As String, redirectUri As Uri, clientCredential As ClientCredential, resource As String) As Task(Of AuthenticationResult)
    parameters:
    - id: authorizationCode
      type: System.String
      description: The authorization code received from service authorization endpoint.
    - id: redirectUri
      type: System.Uri
      description: Address to return to upon receiving a response from the authority.
    - id: clientCredential
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential
      description: The credential to use for token acquisition.
    - id: resource
      type: System.String
      description: Identifier of the target resource that is the recipient of the requested token. It can be null if provided earlier to acquire authorizationCode.
    return:
      type: System.Threading.Tasks.Task{Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult}
      description: It contains Access Token, Refresh Token and the Access Token's expiration time.
  platform:
  - net40
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByAuthorizationCodeAsync(System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertion)
  id: AcquireTokenByAuthorizationCodeAsync(System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertion)
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: AcquireTokenByAuthorizationCodeAsync(String, Uri, ClientAssertion)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByAuthorizationCodeAsync(System.String, System.Uri, Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertion)
  type: Method
  source:
    remote:
      path: src/ADAL.NET/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.NET/AuthenticationContext.cs
    startLine: 140
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: >-
    Acquires security token from the authority using an authorization code previously received.

    This method does not lookup token cache, but stores the result in it, so it can be looked up using other methods such as <xref href="Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenSilentAsync(System.String,System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public Task<AuthenticationResult> AcquireTokenByAuthorizationCodeAsync(string authorizationCode, Uri redirectUri, ClientAssertion clientAssertion)
    content.vb: Public Function AcquireTokenByAuthorizationCodeAsync(authorizationCode As String, redirectUri As Uri, clientAssertion As ClientAssertion) As Task(Of AuthenticationResult)
    parameters:
    - id: authorizationCode
      type: System.String
      description: The authorization code received from service authorization endpoint.
    - id: redirectUri
      type: System.Uri
      description: The redirect address used for obtaining authorization code.
    - id: clientAssertion
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertion
      description: The client assertion to use for token acquisition.
    return:
      type: System.Threading.Tasks.Task{Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult}
      description: It contains Access Token, Refresh Token and the Access Token's expiration time.
  platform:
  - net40
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByAuthorizationCodeAsync(System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertion,System.String)
  id: AcquireTokenByAuthorizationCodeAsync(System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertion,System.String)
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: AcquireTokenByAuthorizationCodeAsync(String, Uri, ClientAssertion, String)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByAuthorizationCodeAsync(System.String, System.Uri, Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertion, System.String)
  type: Method
  source:
    remote:
      path: src/ADAL.NET/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.NET/AuthenticationContext.cs
    startLine: 154
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: >-
    Acquires security token from the authority using an authorization code previously received.

    This method does not lookup token cache, but stores the result in it, so it can be looked up using other methods such as <xref href="Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenSilentAsync(System.String,System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public Task<AuthenticationResult> AcquireTokenByAuthorizationCodeAsync(string authorizationCode, Uri redirectUri, ClientAssertion clientAssertion, string resource)
    content.vb: Public Function AcquireTokenByAuthorizationCodeAsync(authorizationCode As String, redirectUri As Uri, clientAssertion As ClientAssertion, resource As String) As Task(Of AuthenticationResult)
    parameters:
    - id: authorizationCode
      type: System.String
      description: The authorization code received from service authorization endpoint.
    - id: redirectUri
      type: System.Uri
      description: The redirect address used for obtaining authorization code.
    - id: clientAssertion
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertion
      description: The client assertion to use for token acquisition.
    - id: resource
      type: System.String
      description: Identifier of the target resource that is the recipient of the requested token. It can be null if provided earlier to acquire authorizationCode.
    return:
      type: System.Threading.Tasks.Task{Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult}
      description: It contains Access Token, Refresh Token and the Access Token's expiration time.
  platform:
  - net40
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByAuthorizationCodeAsync(System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate)
  id: AcquireTokenByAuthorizationCodeAsync(System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate)
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: AcquireTokenByAuthorizationCodeAsync(String, Uri, ClientAssertionCertificate)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByAuthorizationCodeAsync(System.String, System.Uri, Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate)
  type: Method
  source:
    remote:
      path: src/ADAL.NET/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.NET/AuthenticationContext.cs
    startLine: 167
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: >-
    Acquires security token from the authority using an authorization code previously received.

    This method does not lookup token cache, but stores the result in it, so it can be looked up using other methods such as <xref href="Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenSilentAsync(System.String,System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public Task<AuthenticationResult> AcquireTokenByAuthorizationCodeAsync(string authorizationCode, Uri redirectUri, ClientAssertionCertificate clientCertificate)
    content.vb: Public Function AcquireTokenByAuthorizationCodeAsync(authorizationCode As String, redirectUri As Uri, clientCertificate As ClientAssertionCertificate) As Task(Of AuthenticationResult)
    parameters:
    - id: authorizationCode
      type: System.String
      description: The authorization code received from service authorization endpoint.
    - id: redirectUri
      type: System.Uri
      description: The redirect address used for obtaining authorization code.
    - id: clientCertificate
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate
      description: The client certificate to use for token acquisition.
    return:
      type: System.Threading.Tasks.Task{Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult}
      description: It contains Access Token, Refresh Token and the Access Token's expiration time.
  platform:
  - net40
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByAuthorizationCodeAsync(System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate,System.String)
  id: AcquireTokenByAuthorizationCodeAsync(System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate,System.String)
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: AcquireTokenByAuthorizationCodeAsync(String, Uri, ClientAssertionCertificate, String)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByAuthorizationCodeAsync(System.String, System.Uri, Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate, System.String)
  type: Method
  source:
    remote:
      path: src/ADAL.NET/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.NET/AuthenticationContext.cs
    startLine: 181
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: >-
    Acquires security token from the authority using an authorization code previously received.

    This method does not lookup token cache, but stores the result in it, so it can be looked up using other methods such as <xref href="Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenSilentAsync(System.String,System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public Task<AuthenticationResult> AcquireTokenByAuthorizationCodeAsync(string authorizationCode, Uri redirectUri, ClientAssertionCertificate clientCertificate, string resource)
    content.vb: Public Function AcquireTokenByAuthorizationCodeAsync(authorizationCode As String, redirectUri As Uri, clientCertificate As ClientAssertionCertificate, resource As String) As Task(Of AuthenticationResult)
    parameters:
    - id: authorizationCode
      type: System.String
      description: The authorization code received from service authorization endpoint.
    - id: redirectUri
      type: System.Uri
      description: The redirect address used for obtaining authorization code.
    - id: clientCertificate
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate
      description: The client certificate to use for token acquisition.
    - id: resource
      type: System.String
      description: Identifier of the target resource that is the recipient of the requested token. It can be null if provided earlier to acquire authorizationCode.
    return:
      type: System.Threading.Tasks.Task{Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult}
      description: It contains Access Token, Refresh Token and the Access Token's expiration time.
  platform:
  - net40
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByRefreshTokenAsync(System.String,System.String)
  id: AcquireTokenByRefreshTokenAsync(System.String,System.String)
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: AcquireTokenByRefreshTokenAsync(String, String)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByRefreshTokenAsync(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ADAL.NET/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.NET/AuthenticationContext.cs
    startLine: 192
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Acquires a security token from the authority using a Refresh Token previously received.
  example: []
  syntax:
    content: public Task<AuthenticationResult> AcquireTokenByRefreshTokenAsync(string refreshToken, string clientId)
    content.vb: Public Function AcquireTokenByRefreshTokenAsync(refreshToken As String, clientId As String) As Task(Of AuthenticationResult)
    parameters:
    - id: refreshToken
      type: System.String
      description: Refresh Token to use in the refresh flow.
    - id: clientId
      type: System.String
      description: Name or ID of the client requesting the token.
    return:
      type: System.Threading.Tasks.Task{Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult}
      description: It contains Access Token, Refresh Token and the Access Token's expiration time.
  platform:
  - net40
  - rt
  - sl
  - wp8
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByRefreshTokenAsync(System.String,System.String,System.String)
  id: AcquireTokenByRefreshTokenAsync(System.String,System.String,System.String)
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: AcquireTokenByRefreshTokenAsync(String, String, String)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByRefreshTokenAsync(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ADAL.NET/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.NET/AuthenticationContext.cs
    startLine: 205
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Acquires a security token from the authority using a Refresh Token previously received.
  example: []
  syntax:
    content: public Task<AuthenticationResult> AcquireTokenByRefreshTokenAsync(string refreshToken, string clientId, string resource)
    content.vb: Public Function AcquireTokenByRefreshTokenAsync(refreshToken As String, clientId As String, resource As String) As Task(Of AuthenticationResult)
    parameters:
    - id: refreshToken
      type: System.String
      description: Refresh Token to use in the refresh flow.
    - id: clientId
      type: System.String
      description: Name or ID of the client requesting the token.
    - id: resource
      type: System.String
      description: >-
        Identifier of the target resource that is the recipient of the requested token. If null, token is requested for the same resource refresh token was originally issued for.

        If passed, resource should match the original resource used to acquire refresh token unless token service supports refresh token for multiple resources.
    return:
      type: System.Threading.Tasks.Task{Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult}
      description: It contains Access Token, Refresh Token and the Access Token's expiration time.
  platform:
  - net40
  - rt
  - sl
  - wp8
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByRefreshTokenAsync(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential)
  id: AcquireTokenByRefreshTokenAsync(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential)
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: AcquireTokenByRefreshTokenAsync(String, ClientCredential)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByRefreshTokenAsync(System.String, Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential)
  type: Method
  source:
    remote:
      path: src/ADAL.NET/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.NET/AuthenticationContext.cs
    startLine: 216
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Acquires a security token from the authority using a Refresh Token previously received.
  example: []
  syntax:
    content: public Task<AuthenticationResult> AcquireTokenByRefreshTokenAsync(string refreshToken, ClientCredential clientCredential)
    content.vb: Public Function AcquireTokenByRefreshTokenAsync(refreshToken As String, clientCredential As ClientCredential) As Task(Of AuthenticationResult)
    parameters:
    - id: refreshToken
      type: System.String
      description: Refresh Token to use in the refresh flow.
    - id: clientCredential
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential
      description: The client credential used for token acquisition.
    return:
      type: System.Threading.Tasks.Task{Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult}
      description: It contains Access Token, Refresh Token and the Access Token's expiration time.
  platform:
  - net40
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByRefreshTokenAsync(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential,System.String)
  id: AcquireTokenByRefreshTokenAsync(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential,System.String)
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: AcquireTokenByRefreshTokenAsync(String, ClientCredential, String)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByRefreshTokenAsync(System.String, Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential, System.String)
  type: Method
  source:
    remote:
      path: src/ADAL.NET/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.NET/AuthenticationContext.cs
    startLine: 229
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Acquires a security token from the authority using a Refresh Token previously received.
  example: []
  syntax:
    content: public Task<AuthenticationResult> AcquireTokenByRefreshTokenAsync(string refreshToken, ClientCredential clientCredential, string resource)
    content.vb: Public Function AcquireTokenByRefreshTokenAsync(refreshToken As String, clientCredential As ClientCredential, resource As String) As Task(Of AuthenticationResult)
    parameters:
    - id: refreshToken
      type: System.String
      description: Refresh Token to use in the refresh flow.
    - id: clientCredential
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential
      description: The client credential used for token acquisition.
    - id: resource
      type: System.String
      description: >-
        Identifier of the target resource that is the recipient of the requested token. If null, token is requested for the same resource refresh token was originally issued for.

        If passed, resource should match the original resource used to acquire refresh token unless token service supports refresh token for multiple resources.
    return:
      type: System.Threading.Tasks.Task{Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult}
      description: It contains Access Token, Refresh Token and the Access Token's expiration time.
  platform:
  - net40
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByRefreshTokenAsync(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertion)
  id: AcquireTokenByRefreshTokenAsync(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertion)
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: AcquireTokenByRefreshTokenAsync(String, ClientAssertion)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByRefreshTokenAsync(System.String, Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertion)
  type: Method
  source:
    remote:
      path: src/ADAL.NET/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.NET/AuthenticationContext.cs
    startLine: 240
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Acquires a security token from the authority using a Refresh Token previously received.
  example: []
  syntax:
    content: public Task<AuthenticationResult> AcquireTokenByRefreshTokenAsync(string refreshToken, ClientAssertion clientAssertion)
    content.vb: Public Function AcquireTokenByRefreshTokenAsync(refreshToken As String, clientAssertion As ClientAssertion) As Task(Of AuthenticationResult)
    parameters:
    - id: refreshToken
      type: System.String
      description: Refresh Token to use in the refresh flow.
    - id: clientAssertion
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertion
      description: The client assertion used for token acquisition.
    return:
      type: System.Threading.Tasks.Task{Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult}
      description: It contains Access Token, Refresh Token and the Access Token's expiration time.
  platform:
  - net40
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByRefreshTokenAsync(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertion,System.String)
  id: AcquireTokenByRefreshTokenAsync(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertion,System.String)
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: AcquireTokenByRefreshTokenAsync(String, ClientAssertion, String)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByRefreshTokenAsync(System.String, Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertion, System.String)
  type: Method
  source:
    remote:
      path: src/ADAL.NET/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.NET/AuthenticationContext.cs
    startLine: 253
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Acquires a security token from the authority using a Refresh Token previously received.
  example: []
  syntax:
    content: public Task<AuthenticationResult> AcquireTokenByRefreshTokenAsync(string refreshToken, ClientAssertion clientAssertion, string resource)
    content.vb: Public Function AcquireTokenByRefreshTokenAsync(refreshToken As String, clientAssertion As ClientAssertion, resource As String) As Task(Of AuthenticationResult)
    parameters:
    - id: refreshToken
      type: System.String
      description: Refresh Token to use in the refresh flow.
    - id: clientAssertion
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertion
      description: The client assertion used for token acquisition.
    - id: resource
      type: System.String
      description: >-
        Identifier of the target resource that is the recipient of the requested token. If null, token is requested for the same resource refresh token was originally issued for.

        If passed, resource should match the original resource used to acquire refresh token unless token service supports refresh token for multiple resources.
    return:
      type: System.Threading.Tasks.Task{Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult}
      description: It contains Access Token, Refresh Token and the Access Token's expiration time.
  platform:
  - net40
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByRefreshTokenAsync(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate)
  id: AcquireTokenByRefreshTokenAsync(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate)
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: AcquireTokenByRefreshTokenAsync(String, ClientAssertionCertificate)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByRefreshTokenAsync(System.String, Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate)
  type: Method
  source:
    remote:
      path: src/ADAL.NET/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.NET/AuthenticationContext.cs
    startLine: 264
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Acquires a security token from the authority using a Refresh Token previously received.
  example: []
  syntax:
    content: public Task<AuthenticationResult> AcquireTokenByRefreshTokenAsync(string refreshToken, ClientAssertionCertificate clientCertificate)
    content.vb: Public Function AcquireTokenByRefreshTokenAsync(refreshToken As String, clientCertificate As ClientAssertionCertificate) As Task(Of AuthenticationResult)
    parameters:
    - id: refreshToken
      type: System.String
      description: Refresh Token to use in the refresh flow.
    - id: clientCertificate
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate
      description: The client certificate used for token acquisition.
    return:
      type: System.Threading.Tasks.Task{Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult}
      description: It contains Access Token, Refresh Token and the Access Token's expiration time.
  platform:
  - net40
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByRefreshTokenAsync(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate,System.String)
  id: AcquireTokenByRefreshTokenAsync(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate,System.String)
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: AcquireTokenByRefreshTokenAsync(String, ClientAssertionCertificate, String)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByRefreshTokenAsync(System.String, Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate, System.String)
  type: Method
  source:
    remote:
      path: src/ADAL.NET/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.NET/AuthenticationContext.cs
    startLine: 277
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Acquires a security token from the authority using a Refresh Token previously received.
  example: []
  syntax:
    content: public Task<AuthenticationResult> AcquireTokenByRefreshTokenAsync(string refreshToken, ClientAssertionCertificate clientCertificate, string resource)
    content.vb: Public Function AcquireTokenByRefreshTokenAsync(refreshToken As String, clientCertificate As ClientAssertionCertificate, resource As String) As Task(Of AuthenticationResult)
    parameters:
    - id: refreshToken
      type: System.String
      description: Refresh Token to use in the refresh flow.
    - id: clientCertificate
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate
      description: The client certificate used for token acquisition.
    - id: resource
      type: System.String
      description: >-
        Identifier of the target resource that is the recipient of the requested token. If null, token is requested for the same resource refresh token was originally issued for.

        If passed, resource should match the original resource used to acquire refresh token unless token service supports refresh token for multiple resources.
    return:
      type: System.Threading.Tasks.Task{Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult}
      description: It contains Access Token, Refresh Token and the Access Token's expiration time.
  platform:
  - net40
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenAsync(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential,Microsoft.IdentityModel.Clients.ActiveDirectory.UserAssertion)
  id: AcquireTokenAsync(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential,Microsoft.IdentityModel.Clients.ActiveDirectory.UserAssertion)
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: AcquireTokenAsync(String, ClientCredential, UserAssertion)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenAsync(System.String, Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential, Microsoft.IdentityModel.Clients.ActiveDirectory.UserAssertion)
  type: Method
  source:
    remote:
      path: src/ADAL.NET/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.NET/AuthenticationContext.cs
    startLine: 289
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Acquires an access token from the authority on behalf of a user. It requires using a user token previously received.
  example: []
  syntax:
    content: public Task<AuthenticationResult> AcquireTokenAsync(string resource, ClientCredential clientCredential, UserAssertion userAssertion)
    content.vb: Public Function AcquireTokenAsync(resource As String, clientCredential As ClientCredential, userAssertion As UserAssertion) As Task(Of AuthenticationResult)
    parameters:
    - id: resource
      type: System.String
      description: Identifier of the target resource that is the recipient of the requested token.
    - id: clientCredential
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential
      description: The client credential to use for token acquisition.
    - id: userAssertion
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.UserAssertion
      description: The user assertion (token) to use for token acquisition.
    return:
      type: System.Threading.Tasks.Task{Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult}
      description: It contains Access Token and the Access Token's expiration time.
  platform:
  - net40
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenAsync(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate,Microsoft.IdentityModel.Clients.ActiveDirectory.UserAssertion)
  id: AcquireTokenAsync(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate,Microsoft.IdentityModel.Clients.ActiveDirectory.UserAssertion)
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: AcquireTokenAsync(String, ClientAssertionCertificate, UserAssertion)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenAsync(System.String, Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate, Microsoft.IdentityModel.Clients.ActiveDirectory.UserAssertion)
  type: Method
  source:
    remote:
      path: src/ADAL.NET/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.NET/AuthenticationContext.cs
    startLine: 301
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Acquires an access token from the authority on behalf of a user. It requires using a user token previously received.
  example: []
  syntax:
    content: public Task<AuthenticationResult> AcquireTokenAsync(string resource, ClientAssertionCertificate clientCertificate, UserAssertion userAssertion)
    content.vb: Public Function AcquireTokenAsync(resource As String, clientCertificate As ClientAssertionCertificate, userAssertion As UserAssertion) As Task(Of AuthenticationResult)
    parameters:
    - id: resource
      type: System.String
      description: Identifier of the target resource that is the recipient of the requested token.
    - id: clientCertificate
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate
      description: The client certificate to use for token acquisition.
    - id: userAssertion
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.UserAssertion
      description: The user assertion (token) to use for token acquisition.
    return:
      type: System.Threading.Tasks.Task{Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult}
      description: It contains Access Token and the Access Token's expiration time.
  platform:
  - net40
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenAsync(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertion,Microsoft.IdentityModel.Clients.ActiveDirectory.UserAssertion)
  id: AcquireTokenAsync(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertion,Microsoft.IdentityModel.Clients.ActiveDirectory.UserAssertion)
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: AcquireTokenAsync(String, ClientAssertion, UserAssertion)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenAsync(System.String, Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertion, Microsoft.IdentityModel.Clients.ActiveDirectory.UserAssertion)
  type: Method
  source:
    remote:
      path: src/ADAL.NET/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.NET/AuthenticationContext.cs
    startLine: 313
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Acquires an access token from the authority on behalf of a user. It requires using a user token previously received.
  example: []
  syntax:
    content: public Task<AuthenticationResult> AcquireTokenAsync(string resource, ClientAssertion clientAssertion, UserAssertion userAssertion)
    content.vb: Public Function AcquireTokenAsync(resource As String, clientAssertion As ClientAssertion, userAssertion As UserAssertion) As Task(Of AuthenticationResult)
    parameters:
    - id: resource
      type: System.String
      description: Identifier of the target resource that is the recipient of the requested token.
    - id: clientAssertion
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertion
      description: The client assertion to use for token acquisition.
    - id: userAssertion
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.UserAssertion
      description: The user assertion (token) to use for token acquisition.
    return:
      type: System.Threading.Tasks.Task{Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult}
      description: It contains Access Token and the Access Token's expiration time.
  platform:
  - net40
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenSilentAsync(System.String,System.String)
  id: AcquireTokenSilentAsync(System.String,System.String)
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: AcquireTokenSilentAsync(String, String)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenSilentAsync(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ADAL.NET/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.NET/AuthenticationContext.cs
    startLine: 324
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Acquires security token without asking for user credential.
  example: []
  syntax:
    content: public Task<AuthenticationResult> AcquireTokenSilentAsync(string resource, string clientId)
    content.vb: Public Function AcquireTokenSilentAsync(resource As String, clientId As String) As Task(Of AuthenticationResult)
    parameters:
    - id: resource
      type: System.String
      description: Identifier of the target resource that is the recipient of the requested token.
    - id: clientId
      type: System.String
      description: Identifier of the client requesting the token.
    return:
      type: System.Threading.Tasks.Task{Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult}
      description: It contains Access Token, Refresh Token and the Access Token's expiration time. If acquiring token without user credential is not possible, the method throws AdalException.
  platform:
  - net40
  - rt
  - sl
  - wp8
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenSilentAsync(System.String,System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier)
  id: AcquireTokenSilentAsync(System.String,System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier)
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: AcquireTokenSilentAsync(String, String, UserIdentifier)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenSilentAsync(System.String, System.String, Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier)
  type: Method
  source:
    remote:
      path: src/ADAL.NET/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.NET/AuthenticationContext.cs
    startLine: 336
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Acquires security token without asking for user credential.
  example: []
  syntax:
    content: public Task<AuthenticationResult> AcquireTokenSilentAsync(string resource, string clientId, UserIdentifier userId)
    content.vb: Public Function AcquireTokenSilentAsync(resource As String, clientId As String, userId As UserIdentifier) As Task(Of AuthenticationResult)
    parameters:
    - id: resource
      type: System.String
      description: Identifier of the target resource that is the recipient of the requested token.
    - id: clientId
      type: System.String
      description: Identifier of the client requesting the token.
    - id: userId
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier
      description: Identifier of the user token is requested for. This parameter can be <xref href="Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier" data-throw-if-not-resolved="false"></xref>.Any.
    return:
      type: System.Threading.Tasks.Task{Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult}
      description: It contains Access Token, Refresh Token and the Access Token's expiration time. If acquiring token without user credential is not possible, the method throws AdalException.
  platform:
  - net40
  - rt
  - sl
  - wp8
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenSilentAsync(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential,Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier)
  id: AcquireTokenSilentAsync(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential,Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier)
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: AcquireTokenSilentAsync(String, ClientCredential, UserIdentifier)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenSilentAsync(System.String, Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential, Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier)
  type: Method
  source:
    remote:
      path: src/ADAL.NET/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.NET/AuthenticationContext.cs
    startLine: 348
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Acquires security token without asking for user credential.
  example: []
  syntax:
    content: public Task<AuthenticationResult> AcquireTokenSilentAsync(string resource, ClientCredential clientCredential, UserIdentifier userId)
    content.vb: Public Function AcquireTokenSilentAsync(resource As String, clientCredential As ClientCredential, userId As UserIdentifier) As Task(Of AuthenticationResult)
    parameters:
    - id: resource
      type: System.String
      description: Identifier of the target resource that is the recipient of the requested token.
    - id: clientCredential
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential
      description: The client credential to use for token acquisition.
    - id: userId
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier
      description: Identifier of the user token is requested for. This parameter can be <xref href="Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier" data-throw-if-not-resolved="false"></xref>.Any.
    return:
      type: System.Threading.Tasks.Task{Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult}
      description: It contains Access Token, Refresh Token and the Access Token's expiration time. If acquiring token without user credential is not possible, the method throws AdalException.
  platform:
  - net40
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenSilentAsync(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate,Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier)
  id: AcquireTokenSilentAsync(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate,Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier)
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: AcquireTokenSilentAsync(String, ClientAssertionCertificate, UserIdentifier)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenSilentAsync(System.String, Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate, Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier)
  type: Method
  source:
    remote:
      path: src/ADAL.NET/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.NET/AuthenticationContext.cs
    startLine: 360
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Acquires security token without asking for user credential.
  example: []
  syntax:
    content: public Task<AuthenticationResult> AcquireTokenSilentAsync(string resource, ClientAssertionCertificate clientCertificate, UserIdentifier userId)
    content.vb: Public Function AcquireTokenSilentAsync(resource As String, clientCertificate As ClientAssertionCertificate, userId As UserIdentifier) As Task(Of AuthenticationResult)
    parameters:
    - id: resource
      type: System.String
      description: Identifier of the target resource that is the recipient of the requested token.
    - id: clientCertificate
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate
      description: The client certificate to use for token acquisition.
    - id: userId
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier
      description: Identifier of the user token is requested for. This parameter can be <xref href="Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier" data-throw-if-not-resolved="false"></xref>.Any.
    return:
      type: System.Threading.Tasks.Task{Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult}
      description: It contains Access Token, Refresh Token and the Access Token's expiration time. If acquiring token without user credential is not possible, the method throws AdalException.
  platform:
  - net40
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenSilentAsync(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertion,Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier)
  id: AcquireTokenSilentAsync(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertion,Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier)
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: AcquireTokenSilentAsync(String, ClientAssertion, UserIdentifier)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenSilentAsync(System.String, Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertion, Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier)
  type: Method
  source:
    remote:
      path: src/ADAL.NET/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.NET/AuthenticationContext.cs
    startLine: 372
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Acquires security token without asking for user credential.
  example: []
  syntax:
    content: public Task<AuthenticationResult> AcquireTokenSilentAsync(string resource, ClientAssertion clientAssertion, UserIdentifier userId)
    content.vb: Public Function AcquireTokenSilentAsync(resource As String, clientAssertion As ClientAssertion, userId As UserIdentifier) As Task(Of AuthenticationResult)
    parameters:
    - id: resource
      type: System.String
      description: Identifier of the target resource that is the recipient of the requested token.
    - id: clientAssertion
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertion
      description: The client assertion to use for token acquisition.
    - id: userId
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier
      description: Identifier of the user token is requested for. This parameter can be <xref href="Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier" data-throw-if-not-resolved="false"></xref>.Any.
    return:
      type: System.Threading.Tasks.Task{Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult}
      description: It contains Access Token, Refresh Token and the Access Token's expiration time. If acquiring token without user credential is not possible, the method throws AdalException.
  platform:
  - net40
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireToken(System.String,System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.UserCredential)
  id: AcquireToken(System.String,System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.UserCredential)
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: AcquireToken(String, String, UserCredential)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireToken(System.String, System.String, Microsoft.IdentityModel.Clients.ActiveDirectory.UserCredential)
  type: Method
  source:
    remote:
      path: src/ADAL.NET/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.NET/AuthenticationContext.cs
    startLine: 384
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Acquires security token from the authority.
  example: []
  syntax:
    content: public AuthenticationResult AcquireToken(string resource, string clientId, UserCredential userCredential)
    content.vb: Public Function AcquireToken(resource As String, clientId As String, userCredential As UserCredential) As AuthenticationResult
    parameters:
    - id: resource
      type: System.String
      description: Identifier of the target resource that is the recipient of the requested token.
    - id: clientId
      type: System.String
      description: Identifier of the client requesting the token.
    - id: userCredential
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.UserCredential
      description: The credential to use for token acquisition.
    return:
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult
      description: It contains Access Token and the Access Token's expiration time. Refresh Token property will be null for this overload.
  platform:
  - net40
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireToken(System.String,System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.UserAssertion)
  id: AcquireToken(System.String,System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.UserAssertion)
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: AcquireToken(String, String, UserAssertion)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireToken(System.String, System.String, Microsoft.IdentityModel.Clients.ActiveDirectory.UserAssertion)
  type: Method
  source:
    remote:
      path: src/ADAL.NET/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.NET/AuthenticationContext.cs
    startLine: 396
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Acquires security token from the authority.
  example: []
  syntax:
    content: public AuthenticationResult AcquireToken(string resource, string clientId, UserAssertion userAssertion)
    content.vb: Public Function AcquireToken(resource As String, clientId As String, userAssertion As UserAssertion) As AuthenticationResult
    parameters:
    - id: resource
      type: System.String
      description: Identifier of the target resource that is the recipient of the requested token.
    - id: clientId
      type: System.String
      description: Identifier of the client requesting the token.
    - id: userAssertion
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.UserAssertion
      description: The assertion to use for token acquisition.
    return:
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult
      description: It contains Access Token and the Access Token's expiration time. Refresh Token property will be null for this overload.
  platform:
  - net40
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireToken(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential)
  id: AcquireToken(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential)
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: AcquireToken(String, ClientCredential)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireToken(System.String, Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential)
  type: Method
  source:
    remote:
      path: src/ADAL.NET/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.NET/AuthenticationContext.cs
    startLine: 407
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Acquires security token from the authority.
  example: []
  syntax:
    content: public AuthenticationResult AcquireToken(string resource, ClientCredential clientCredential)
    content.vb: Public Function AcquireToken(resource As String, clientCredential As ClientCredential) As AuthenticationResult
    parameters:
    - id: resource
      type: System.String
      description: Identifier of the target resource that is the recipient of the requested token.
    - id: clientCredential
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential
      description: The client credential to use for token acquisition.
    return:
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult
      description: It contains Access Token and the Access Token's expiration time. Refresh Token property will be null for this overload.
  platform:
  - net40
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireToken(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate)
  id: AcquireToken(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate)
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: AcquireToken(String, ClientAssertionCertificate)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireToken(System.String, Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate)
  type: Method
  source:
    remote:
      path: src/ADAL.NET/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.NET/AuthenticationContext.cs
    startLine: 418
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Acquires security token from the authority.
  example: []
  syntax:
    content: public AuthenticationResult AcquireToken(string resource, ClientAssertionCertificate clientCertificate)
    content.vb: Public Function AcquireToken(resource As String, clientCertificate As ClientAssertionCertificate) As AuthenticationResult
    parameters:
    - id: resource
      type: System.String
      description: Identifier of the target resource that is the recipient of the requested token.
    - id: clientCertificate
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate
      description: The client certificate to use for token acquisition.
    return:
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult
      description: It contains Access Token and the Access Token's expiration time. Refresh Token property will be null for this overload.
  platform:
  - net40
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireToken(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertion)
  id: AcquireToken(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertion)
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: AcquireToken(String, ClientAssertion)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireToken(System.String, Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertion)
  type: Method
  source:
    remote:
      path: src/ADAL.NET/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.NET/AuthenticationContext.cs
    startLine: 429
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Acquires security token from the authority.
  example: []
  syntax:
    content: public AuthenticationResult AcquireToken(string resource, ClientAssertion clientAssertion)
    content.vb: Public Function AcquireToken(resource As String, clientAssertion As ClientAssertion) As AuthenticationResult
    parameters:
    - id: resource
      type: System.String
      description: Identifier of the target resource that is the recipient of the requested token.
    - id: clientAssertion
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertion
      description: The client assertion to use for token acquisition.
    return:
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult
      description: It contains Access Token and the Access Token's expiration time. Refresh Token property will be null for this overload.
  platform:
  - net40
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireToken(System.String,System.String,System.Uri)
  id: AcquireToken(System.String,System.String,System.Uri)
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: AcquireToken(String, String, Uri)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireToken(System.String, System.String, System.Uri)
  type: Method
  source:
    remote:
      path: src/ADAL.NET/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.NET/AuthenticationContext.cs
    startLine: 441
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Acquires security token from the authority.
  example: []
  syntax:
    content: public AuthenticationResult AcquireToken(string resource, string clientId, Uri redirectUri)
    content.vb: Public Function AcquireToken(resource As String, clientId As String, redirectUri As Uri) As AuthenticationResult
    parameters:
    - id: resource
      type: System.String
      description: Identifier of the target resource that is the recipient of the requested token.
    - id: clientId
      type: System.String
      description: Identifier of the client requesting the token.
    - id: redirectUri
      type: System.Uri
      description: Address to return to upon receiving a response from the authority.
    return:
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult
      description: It contains Access Token, Refresh Token and the Access Token's expiration time.
  platform:
  - net40
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireToken(System.String,System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.PromptBehavior)
  id: AcquireToken(System.String,System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.PromptBehavior)
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: AcquireToken(String, String, Uri, PromptBehavior)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireToken(System.String, System.String, System.Uri, Microsoft.IdentityModel.Clients.ActiveDirectory.PromptBehavior)
  type: Method
  source:
    remote:
      path: src/ADAL.NET/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.NET/AuthenticationContext.cs
    startLine: 454
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Acquires security token from the authority.
  example: []
  syntax:
    content: public AuthenticationResult AcquireToken(string resource, string clientId, Uri redirectUri, PromptBehavior promptBehavior)
    content.vb: Public Function AcquireToken(resource As String, clientId As String, redirectUri As Uri, promptBehavior As PromptBehavior) As AuthenticationResult
    parameters:
    - id: resource
      type: System.String
      description: Identifier of the target resource that is the recipient of the requested token.
    - id: clientId
      type: System.String
      description: Identifier of the client requesting the token.
    - id: redirectUri
      type: System.Uri
      description: Address to return to upon receiving a response from the authority.
    - id: promptBehavior
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.PromptBehavior
      description: If <xref href="Microsoft.IdentityModel.Clients.ActiveDirectory.PromptBehavior.Always" data-throw-if-not-resolved="false"></xref>, asks service to show user the authentication page which gives them chance to authenticate as a different user.
    return:
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult
      description: It contains Access Token, Refresh Token and the Access Token's expiration time.
  platform:
  - net40
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireToken(System.String,System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.PromptBehavior,Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier)
  id: AcquireToken(System.String,System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.PromptBehavior,Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier)
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: AcquireToken(String, String, Uri, PromptBehavior, UserIdentifier)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireToken(System.String, System.String, System.Uri, Microsoft.IdentityModel.Clients.ActiveDirectory.PromptBehavior, Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier)
  type: Method
  source:
    remote:
      path: src/ADAL.NET/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.NET/AuthenticationContext.cs
    startLine: 469
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Acquires security token from the authority.
  example: []
  syntax:
    content: public AuthenticationResult AcquireToken(string resource, string clientId, Uri redirectUri, PromptBehavior promptBehavior, UserIdentifier userId)
    content.vb: Public Function AcquireToken(resource As String, clientId As String, redirectUri As Uri, promptBehavior As PromptBehavior, userId As UserIdentifier) As AuthenticationResult
    parameters:
    - id: resource
      type: System.String
      description: Identifier of the target resource that is the recipient of the requested token.
    - id: clientId
      type: System.String
      description: Identifier of the client requesting the token.
    - id: redirectUri
      type: System.Uri
      description: Address to return to upon receiving a response from the authority.
    - id: promptBehavior
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.PromptBehavior
      description: If <xref href="Microsoft.IdentityModel.Clients.ActiveDirectory.PromptBehavior.Always" data-throw-if-not-resolved="false"></xref>, asks service to show user the authentication page which gives them chance to authenticate as a different user.
    - id: userId
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier
      description: >-
        Identifier of the user token is requested for. If created from DisplayableId, this parameter will be used to pre-populate the username field in the authentication form. Please note that the end user can still edit the username field and authenticate as a different user.

        If you want to be notified of such change with an exception, create UserIdentifier with type RequiredDisplayableId. This parameter can be <xref href="Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier" data-throw-if-not-resolved="false"></xref>.Any.
    return:
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult
      description: It contains Access Token, Refresh Token and the Access Token's expiration time.
  platform:
  - net40
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireToken(System.String,System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.PromptBehavior,Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier,System.String)
  id: AcquireToken(System.String,System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.PromptBehavior,Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier,System.String)
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: AcquireToken(String, String, Uri, PromptBehavior, UserIdentifier, String)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireToken(System.String, System.String, System.Uri, Microsoft.IdentityModel.Clients.ActiveDirectory.PromptBehavior, Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier, System.String)
  type: Method
  source:
    remote:
      path: src/ADAL.NET/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.NET/AuthenticationContext.cs
    startLine: 485
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Acquires security token from the authority.
  example: []
  syntax:
    content: public AuthenticationResult AcquireToken(string resource, string clientId, Uri redirectUri, PromptBehavior promptBehavior, UserIdentifier userId, string extraQueryParameters)
    content.vb: Public Function AcquireToken(resource As String, clientId As String, redirectUri As Uri, promptBehavior As PromptBehavior, userId As UserIdentifier, extraQueryParameters As String) As AuthenticationResult
    parameters:
    - id: resource
      type: System.String
      description: Identifier of the target resource that is the recipient of the requested token.
    - id: clientId
      type: System.String
      description: Identifier of the client requesting the token.
    - id: redirectUri
      type: System.Uri
      description: Address to return to upon receiving a response from the authority.
    - id: promptBehavior
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.PromptBehavior
      description: If <xref href="Microsoft.IdentityModel.Clients.ActiveDirectory.PromptBehavior.Always" data-throw-if-not-resolved="false"></xref>, asks service to show user the authentication page which gives them chance to authenticate as a different user.
    - id: userId
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier
      description: >-
        Identifier of the user token is requested for. If created from DisplayableId, this parameter will be used to pre-populate the username field in the authentication form. Please note that the end user can still edit the username field and authenticate as a different user.

        If you want to be notified of such change with an exception, create UserIdentifier with type RequiredDisplayableId. This parameter can be <xref href="Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier" data-throw-if-not-resolved="false"></xref>.Any.
    - id: extraQueryParameters
      type: System.String
      description: This parameter will be appended as is to the query string in the HTTP authentication request to the authority. The parameter can be null.
    return:
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult
      description: It contains Access Token, Refresh Token and the Access Token's expiration time.
  platform:
  - net40
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByAuthorizationCode(System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential)
  id: AcquireTokenByAuthorizationCode(System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential)
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: AcquireTokenByAuthorizationCode(String, Uri, ClientCredential)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByAuthorizationCode(System.String, System.Uri, Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential)
  type: Method
  source:
    remote:
      path: src/ADAL.NET/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.NET/AuthenticationContext.cs
    startLine: 498
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: >-
    Acquires security token from the authority using authorization code previously received.

    This method does not lookup token cache, but stores the result in it, so it can be looked up using other methods such as <xref href="Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenSilent(System.String,System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public AuthenticationResult AcquireTokenByAuthorizationCode(string authorizationCode, Uri redirectUri, ClientCredential clientCredential)
    content.vb: Public Function AcquireTokenByAuthorizationCode(authorizationCode As String, redirectUri As Uri, clientCredential As ClientCredential) As AuthenticationResult
    parameters:
    - id: authorizationCode
      type: System.String
      description: The authorization code received from service authorization endpoint.
    - id: redirectUri
      type: System.Uri
      description: Address to return to upon receiving a response from the authority.
    - id: clientCredential
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential
      description: The credential to use for token acquisition.
    return:
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult
      description: It contains Access Token, Refresh Token and the Access Token's expiration time.
  platform:
  - net40
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByAuthorizationCode(System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential,System.String)
  id: AcquireTokenByAuthorizationCode(System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential,System.String)
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: AcquireTokenByAuthorizationCode(String, Uri, ClientCredential, String)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByAuthorizationCode(System.String, System.Uri, Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential, System.String)
  type: Method
  source:
    remote:
      path: src/ADAL.NET/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.NET/AuthenticationContext.cs
    startLine: 512
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: >-
    Acquires security token from the authority using an authorization code previously received.

    This method does not lookup token cache, but stores the result in it, so it can be looked up using other methods such as <xref href="Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenSilent(System.String,System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public AuthenticationResult AcquireTokenByAuthorizationCode(string authorizationCode, Uri redirectUri, ClientCredential clientCredential, string resource)
    content.vb: Public Function AcquireTokenByAuthorizationCode(authorizationCode As String, redirectUri As Uri, clientCredential As ClientCredential, resource As String) As AuthenticationResult
    parameters:
    - id: authorizationCode
      type: System.String
      description: The authorization code received from service authorization endpoint.
    - id: redirectUri
      type: System.Uri
      description: Address to return to upon receiving a response from the authority.
    - id: clientCredential
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential
      description: The credential to use for token acquisition.
    - id: resource
      type: System.String
      description: Identifier of the target resource that is the recipient of the requested token. It can be null if provided earlier to acquire authorizationCode.
    return:
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult
      description: It contains Access Token, Refresh Token and the Access Token's expiration time.
  platform:
  - net40
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByAuthorizationCode(System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertion)
  id: AcquireTokenByAuthorizationCode(System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertion)
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: AcquireTokenByAuthorizationCode(String, Uri, ClientAssertion)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByAuthorizationCode(System.String, System.Uri, Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertion)
  type: Method
  source:
    remote:
      path: src/ADAL.NET/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.NET/AuthenticationContext.cs
    startLine: 525
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: >-
    Acquires security token from the authority using an authorization code previously received.

    This method does not lookup token cache, but stores the result in it, so it can be looked up using other methods such as <xref href="Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenSilent(System.String,System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public AuthenticationResult AcquireTokenByAuthorizationCode(string authorizationCode, Uri redirectUri, ClientAssertion clientAssertion)
    content.vb: Public Function AcquireTokenByAuthorizationCode(authorizationCode As String, redirectUri As Uri, clientAssertion As ClientAssertion) As AuthenticationResult
    parameters:
    - id: authorizationCode
      type: System.String
      description: The authorization code received from service authorization endpoint.
    - id: redirectUri
      type: System.Uri
      description: The redirect address used for obtaining authorization code.
    - id: clientAssertion
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertion
      description: The client assertion to use for token acquisition.
    return:
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult
      description: It contains Access Token, Refresh Token and the Access Token's expiration time.
  platform:
  - net40
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByAuthorizationCode(System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertion,System.String)
  id: AcquireTokenByAuthorizationCode(System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertion,System.String)
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: AcquireTokenByAuthorizationCode(String, Uri, ClientAssertion, String)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByAuthorizationCode(System.String, System.Uri, Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertion, System.String)
  type: Method
  source:
    remote:
      path: src/ADAL.NET/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.NET/AuthenticationContext.cs
    startLine: 539
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: >-
    Acquires security token from the authority using an authorization code previously received.

    This method does not lookup token cache, but stores the result in it, so it can be looked up using other methods such as <xref href="Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenSilent(System.String,System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public AuthenticationResult AcquireTokenByAuthorizationCode(string authorizationCode, Uri redirectUri, ClientAssertion clientAssertion, string resource)
    content.vb: Public Function AcquireTokenByAuthorizationCode(authorizationCode As String, redirectUri As Uri, clientAssertion As ClientAssertion, resource As String) As AuthenticationResult
    parameters:
    - id: authorizationCode
      type: System.String
      description: The authorization code received from service authorization endpoint.
    - id: redirectUri
      type: System.Uri
      description: The redirect address used for obtaining authorization code.
    - id: clientAssertion
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertion
      description: The client assertion to use for token acquisition.
    - id: resource
      type: System.String
      description: Identifier of the target resource that is the recipient of the requested token. It can be null if provided earlier to acquire authorizationCode.
    return:
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult
      description: It contains Access Token, Refresh Token and the Access Token's expiration time.
  platform:
  - net40
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByAuthorizationCode(System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate)
  id: AcquireTokenByAuthorizationCode(System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate)
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: AcquireTokenByAuthorizationCode(String, Uri, ClientAssertionCertificate)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByAuthorizationCode(System.String, System.Uri, Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate)
  type: Method
  source:
    remote:
      path: src/ADAL.NET/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.NET/AuthenticationContext.cs
    startLine: 552
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: >-
    Acquires security token from the authority using an authorization code previously received.

    This method does not lookup token cache, but stores the result in it, so it can be looked up using other methods such as <xref href="Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenSilent(System.String,System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public AuthenticationResult AcquireTokenByAuthorizationCode(string authorizationCode, Uri redirectUri, ClientAssertionCertificate clientCertificate)
    content.vb: Public Function AcquireTokenByAuthorizationCode(authorizationCode As String, redirectUri As Uri, clientCertificate As ClientAssertionCertificate) As AuthenticationResult
    parameters:
    - id: authorizationCode
      type: System.String
      description: The authorization code received from service authorization endpoint.
    - id: redirectUri
      type: System.Uri
      description: The redirect address used for obtaining authorization code.
    - id: clientCertificate
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate
      description: The client certificate to use for token acquisition.
    return:
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult
      description: It contains Access Token, Refresh Token and the Access Token's expiration time.
  platform:
  - net40
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByAuthorizationCode(System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate,System.String)
  id: AcquireTokenByAuthorizationCode(System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate,System.String)
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: AcquireTokenByAuthorizationCode(String, Uri, ClientAssertionCertificate, String)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByAuthorizationCode(System.String, System.Uri, Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate, System.String)
  type: Method
  source:
    remote:
      path: src/ADAL.NET/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.NET/AuthenticationContext.cs
    startLine: 566
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: >-
    Acquires security token from the authority using an authorization code previously received.

    This method does not lookup token cache, but stores the result in it, so it can be looked up using other methods such as <xref href="Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenSilent(System.String,System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public AuthenticationResult AcquireTokenByAuthorizationCode(string authorizationCode, Uri redirectUri, ClientAssertionCertificate clientCertificate, string resource)
    content.vb: Public Function AcquireTokenByAuthorizationCode(authorizationCode As String, redirectUri As Uri, clientCertificate As ClientAssertionCertificate, resource As String) As AuthenticationResult
    parameters:
    - id: authorizationCode
      type: System.String
      description: The authorization code received from service authorization endpoint.
    - id: redirectUri
      type: System.Uri
      description: The redirect address used for obtaining authorization code.
    - id: clientCertificate
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate
      description: The client certificate to use for token acquisition.
    - id: resource
      type: System.String
      description: Identifier of the target resource that is the recipient of the requested token. It can be null if provided earlier to acquire authorizationCode.
    return:
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult
      description: It contains Access Token, Refresh Token and the Access Token's expiration time.
  platform:
  - net40
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByRefreshToken(System.String,System.String)
  id: AcquireTokenByRefreshToken(System.String,System.String)
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: AcquireTokenByRefreshToken(String, String)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByRefreshToken(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ADAL.NET/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.NET/AuthenticationContext.cs
    startLine: 577
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Acquires a security token from the authority using a Refresh Token previously received.
  example: []
  syntax:
    content: public AuthenticationResult AcquireTokenByRefreshToken(string refreshToken, string clientId)
    content.vb: Public Function AcquireTokenByRefreshToken(refreshToken As String, clientId As String) As AuthenticationResult
    parameters:
    - id: refreshToken
      type: System.String
      description: Refresh Token to use in the refresh flow.
    - id: clientId
      type: System.String
      description: Name or ID of the client requesting the token.
    return:
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult
      description: It contains Access Token, Refresh Token and the Access Token's expiration time.
  platform:
  - net40
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByRefreshToken(System.String,System.String,System.String)
  id: AcquireTokenByRefreshToken(System.String,System.String,System.String)
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: AcquireTokenByRefreshToken(String, String, String)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByRefreshToken(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ADAL.NET/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.NET/AuthenticationContext.cs
    startLine: 590
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Acquires a security token from the authority using a Refresh Token previously received.
  example: []
  syntax:
    content: public AuthenticationResult AcquireTokenByRefreshToken(string refreshToken, string clientId, string resource)
    content.vb: Public Function AcquireTokenByRefreshToken(refreshToken As String, clientId As String, resource As String) As AuthenticationResult
    parameters:
    - id: refreshToken
      type: System.String
      description: Refresh Token to use in the refresh flow.
    - id: clientId
      type: System.String
      description: Name or ID of the client requesting the token.
    - id: resource
      type: System.String
      description: >-
        Identifier of the target resource that is the recipient of the requested token. If null, token is requested for the same resource refresh token was originally issued for.

        If passed, resource should match the original resource used to acquire refresh token unless token service supports refresh token for multiple resources.
    return:
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult
      description: It contains Access Token, Refresh Token and the Access Token's expiration time.
  platform:
  - net40
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByRefreshToken(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential)
  id: AcquireTokenByRefreshToken(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential)
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: AcquireTokenByRefreshToken(String, ClientCredential)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByRefreshToken(System.String, Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential)
  type: Method
  source:
    remote:
      path: src/ADAL.NET/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.NET/AuthenticationContext.cs
    startLine: 601
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Acquires a security token from the authority using a Refresh Token previously received.
  example: []
  syntax:
    content: public AuthenticationResult AcquireTokenByRefreshToken(string refreshToken, ClientCredential clientCredential)
    content.vb: Public Function AcquireTokenByRefreshToken(refreshToken As String, clientCredential As ClientCredential) As AuthenticationResult
    parameters:
    - id: refreshToken
      type: System.String
      description: Refresh Token to use in the refresh flow.
    - id: clientCredential
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential
      description: The client credential used for token acquisition.
    return:
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult
      description: It contains Access Token, Refresh Token and the Access Token's expiration time.
  platform:
  - net40
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByRefreshToken(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential,System.String)
  id: AcquireTokenByRefreshToken(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential,System.String)
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: AcquireTokenByRefreshToken(String, ClientCredential, String)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByRefreshToken(System.String, Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential, System.String)
  type: Method
  source:
    remote:
      path: src/ADAL.NET/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.NET/AuthenticationContext.cs
    startLine: 614
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Acquires a security token from the authority using a Refresh Token previously received.
  example: []
  syntax:
    content: public AuthenticationResult AcquireTokenByRefreshToken(string refreshToken, ClientCredential clientCredential, string resource)
    content.vb: Public Function AcquireTokenByRefreshToken(refreshToken As String, clientCredential As ClientCredential, resource As String) As AuthenticationResult
    parameters:
    - id: refreshToken
      type: System.String
      description: Refresh Token to use in the refresh flow.
    - id: clientCredential
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential
      description: The client credential used for token acquisition.
    - id: resource
      type: System.String
      description: >-
        Identifier of the target resource that is the recipient of the requested token. If null, token is requested for the same resource refresh token was originally issued for.

        If passed, resource should match the original resource used to acquire refresh token unless token service supports refresh token for multiple resources.
    return:
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult
      description: It contains Access Token, Refresh Token and the Access Token's expiration time.
  platform:
  - net40
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByRefreshToken(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertion)
  id: AcquireTokenByRefreshToken(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertion)
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: AcquireTokenByRefreshToken(String, ClientAssertion)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByRefreshToken(System.String, Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertion)
  type: Method
  source:
    remote:
      path: src/ADAL.NET/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.NET/AuthenticationContext.cs
    startLine: 625
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Acquires a security token from the authority using a Refresh Token previously received.
  example: []
  syntax:
    content: public AuthenticationResult AcquireTokenByRefreshToken(string refreshToken, ClientAssertion clientAssertion)
    content.vb: Public Function AcquireTokenByRefreshToken(refreshToken As String, clientAssertion As ClientAssertion) As AuthenticationResult
    parameters:
    - id: refreshToken
      type: System.String
      description: Refresh Token to use in the refresh flow.
    - id: clientAssertion
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertion
      description: The client assertion used for token acquisition.
    return:
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult
      description: It contains Access Token, Refresh Token and the Access Token's expiration time.
  platform:
  - net40
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByRefreshToken(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertion,System.String)
  id: AcquireTokenByRefreshToken(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertion,System.String)
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: AcquireTokenByRefreshToken(String, ClientAssertion, String)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByRefreshToken(System.String, Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertion, System.String)
  type: Method
  source:
    remote:
      path: src/ADAL.NET/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.NET/AuthenticationContext.cs
    startLine: 638
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Acquires a security token from the authority using a Refresh Token previously received.
  example: []
  syntax:
    content: public AuthenticationResult AcquireTokenByRefreshToken(string refreshToken, ClientAssertion clientAssertion, string resource)
    content.vb: Public Function AcquireTokenByRefreshToken(refreshToken As String, clientAssertion As ClientAssertion, resource As String) As AuthenticationResult
    parameters:
    - id: refreshToken
      type: System.String
      description: Refresh Token to use in the refresh flow.
    - id: clientAssertion
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertion
      description: The client assertion used for token acquisition.
    - id: resource
      type: System.String
      description: >-
        Identifier of the target resource that is the recipient of the requested token. If null, token is requested for the same resource refresh token was originally issued for.

        If passed, resource should match the original resource used to acquire refresh token unless token service supports refresh token for multiple resources.
    return:
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult
      description: It contains Access Token, Refresh Token and the Access Token's expiration time.
  platform:
  - net40
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByRefreshToken(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate)
  id: AcquireTokenByRefreshToken(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate)
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: AcquireTokenByRefreshToken(String, ClientAssertionCertificate)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByRefreshToken(System.String, Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate)
  type: Method
  source:
    remote:
      path: src/ADAL.NET/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.NET/AuthenticationContext.cs
    startLine: 649
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Acquires a security token from the authority using a Refresh Token previously received.
  example: []
  syntax:
    content: public AuthenticationResult AcquireTokenByRefreshToken(string refreshToken, ClientAssertionCertificate clientCertificate)
    content.vb: Public Function AcquireTokenByRefreshToken(refreshToken As String, clientCertificate As ClientAssertionCertificate) As AuthenticationResult
    parameters:
    - id: refreshToken
      type: System.String
      description: Refresh Token to use in the refresh flow.
    - id: clientCertificate
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate
      description: The client certificate used for token acquisition.
    return:
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult
      description: It contains Access Token, Refresh Token and the Access Token's expiration time.
  platform:
  - net40
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByRefreshToken(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate,System.String)
  id: AcquireTokenByRefreshToken(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate,System.String)
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: AcquireTokenByRefreshToken(String, ClientAssertionCertificate, String)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenByRefreshToken(System.String, Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate, System.String)
  type: Method
  source:
    remote:
      path: src/ADAL.NET/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.NET/AuthenticationContext.cs
    startLine: 662
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Acquires a security token from the authority using a Refresh Token previously received.
  example: []
  syntax:
    content: public AuthenticationResult AcquireTokenByRefreshToken(string refreshToken, ClientAssertionCertificate clientCertificate, string resource)
    content.vb: Public Function AcquireTokenByRefreshToken(refreshToken As String, clientCertificate As ClientAssertionCertificate, resource As String) As AuthenticationResult
    parameters:
    - id: refreshToken
      type: System.String
      description: Refresh Token to use in the refresh flow.
    - id: clientCertificate
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate
      description: The client certificate used for token acquisition.
    - id: resource
      type: System.String
      description: >-
        Identifier of the target resource that is the recipient of the requested token. If null, token is requested for the same resource refresh token was originally issued for.

        If passed, resource should match the original resource used to acquire refresh token unless token service supports refresh token for multiple resources.
    return:
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult
      description: It contains Access Token, Refresh Token and the Access Token's expiration time.
  platform:
  - net40
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireToken(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential,Microsoft.IdentityModel.Clients.ActiveDirectory.UserAssertion)
  id: AcquireToken(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential,Microsoft.IdentityModel.Clients.ActiveDirectory.UserAssertion)
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: AcquireToken(String, ClientCredential, UserAssertion)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireToken(System.String, Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential, Microsoft.IdentityModel.Clients.ActiveDirectory.UserAssertion)
  type: Method
  source:
    remote:
      path: src/ADAL.NET/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.NET/AuthenticationContext.cs
    startLine: 674
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Acquires an access token from the authority on behalf of a user. It requires using a user token previously received.
  example: []
  syntax:
    content: public AuthenticationResult AcquireToken(string resource, ClientCredential clientCredential, UserAssertion userAssertion)
    content.vb: Public Function AcquireToken(resource As String, clientCredential As ClientCredential, userAssertion As UserAssertion) As AuthenticationResult
    parameters:
    - id: resource
      type: System.String
      description: Identifier of the target resource that is the recipient of the requested token.
    - id: clientCredential
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential
      description: The client credential to use for token acquisition.
    - id: userAssertion
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.UserAssertion
      description: The user assertion (token) to use for token acquisition.
    return:
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult
      description: It contains Access Token and the Access Token's expiration time.
  platform:
  - net40
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireToken(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate,Microsoft.IdentityModel.Clients.ActiveDirectory.UserAssertion)
  id: AcquireToken(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate,Microsoft.IdentityModel.Clients.ActiveDirectory.UserAssertion)
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: AcquireToken(String, ClientAssertionCertificate, UserAssertion)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireToken(System.String, Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate, Microsoft.IdentityModel.Clients.ActiveDirectory.UserAssertion)
  type: Method
  source:
    remote:
      path: src/ADAL.NET/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.NET/AuthenticationContext.cs
    startLine: 686
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Acquires an access token from the authority on behalf of a user. It requires using a user token previously received.
  example: []
  syntax:
    content: public AuthenticationResult AcquireToken(string resource, ClientAssertionCertificate clientCertificate, UserAssertion userAssertion)
    content.vb: Public Function AcquireToken(resource As String, clientCertificate As ClientAssertionCertificate, userAssertion As UserAssertion) As AuthenticationResult
    parameters:
    - id: resource
      type: System.String
      description: Identifier of the target resource that is the recipient of the requested token.
    - id: clientCertificate
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate
      description: The client certificate to use for token acquisition.
    - id: userAssertion
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.UserAssertion
      description: The user assertion (token) to use for token acquisition.
    return:
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult
      description: It contains Access Token and the Access Token's expiration time.
  platform:
  - net40
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireToken(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertion,Microsoft.IdentityModel.Clients.ActiveDirectory.UserAssertion)
  id: AcquireToken(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertion,Microsoft.IdentityModel.Clients.ActiveDirectory.UserAssertion)
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: AcquireToken(String, ClientAssertion, UserAssertion)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireToken(System.String, Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertion, Microsoft.IdentityModel.Clients.ActiveDirectory.UserAssertion)
  type: Method
  source:
    remote:
      path: src/ADAL.NET/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.NET/AuthenticationContext.cs
    startLine: 698
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Acquires an access token from the authority on behalf of a user. It requires using a user token previously received.
  example: []
  syntax:
    content: public AuthenticationResult AcquireToken(string resource, ClientAssertion clientAssertion, UserAssertion userAssertion)
    content.vb: Public Function AcquireToken(resource As String, clientAssertion As ClientAssertion, userAssertion As UserAssertion) As AuthenticationResult
    parameters:
    - id: resource
      type: System.String
      description: Identifier of the target resource that is the recipient of the requested token.
    - id: clientAssertion
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertion
      description: The client assertion to use for token acquisition.
    - id: userAssertion
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.UserAssertion
      description: The user assertion (token) to use for token acquisition.
    return:
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult
      description: It contains Access Token and the Access Token's expiration time.
  platform:
  - net40
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenSilent(System.String,System.String)
  id: AcquireTokenSilent(System.String,System.String)
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: AcquireTokenSilent(String, String)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenSilent(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/ADAL.NET/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.NET/AuthenticationContext.cs
    startLine: 710
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Acquires security token without asking for user credential.
  example: []
  syntax:
    content: public AuthenticationResult AcquireTokenSilent(string resource, string clientId)
    content.vb: Public Function AcquireTokenSilent(resource As String, clientId As String) As AuthenticationResult
    parameters:
    - id: resource
      type: System.String
      description: Identifier of the target resource that is the recipient of the requested token.
    - id: clientId
      type: System.String
      description: Identifier of the client requesting the token.
    return:
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult
      description: It contains Access Token, Refresh Token and the Access Token's expiration time. If acquiring token without user credential is not possible, the method throws AdalException.
  platform:
  - net40
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenSilent(System.String,System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier)
  id: AcquireTokenSilent(System.String,System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier)
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: AcquireTokenSilent(String, String, UserIdentifier)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenSilent(System.String, System.String, Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier)
  type: Method
  source:
    remote:
      path: src/ADAL.NET/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.NET/AuthenticationContext.cs
    startLine: 722
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Acquires security token without asking for user credential.
  example: []
  syntax:
    content: public AuthenticationResult AcquireTokenSilent(string resource, string clientId, UserIdentifier userId)
    content.vb: Public Function AcquireTokenSilent(resource As String, clientId As String, userId As UserIdentifier) As AuthenticationResult
    parameters:
    - id: resource
      type: System.String
      description: Identifier of the target resource that is the recipient of the requested token.
    - id: clientId
      type: System.String
      description: Identifier of the client requesting the token.
    - id: userId
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier
      description: Identifier of the user token is requested for. This parameter can be <xref href="Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier" data-throw-if-not-resolved="false"></xref>.Any.
    return:
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult
      description: It contains Access Token, Refresh Token and the Access Token's expiration time. If acquiring token without user credential is not possible, the method throws AdalException.
  platform:
  - net40
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenSilent(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential,Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier)
  id: AcquireTokenSilent(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential,Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier)
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: AcquireTokenSilent(String, ClientCredential, UserIdentifier)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenSilent(System.String, Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential, Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier)
  type: Method
  source:
    remote:
      path: src/ADAL.NET/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.NET/AuthenticationContext.cs
    startLine: 734
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Acquires security token without asking for user credential.
  example: []
  syntax:
    content: public AuthenticationResult AcquireTokenSilent(string resource, ClientCredential clientCredential, UserIdentifier userId)
    content.vb: Public Function AcquireTokenSilent(resource As String, clientCredential As ClientCredential, userId As UserIdentifier) As AuthenticationResult
    parameters:
    - id: resource
      type: System.String
      description: Identifier of the target resource that is the recipient of the requested token.
    - id: clientCredential
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential
      description: The client credential to use for token acquisition.
    - id: userId
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier
      description: Identifier of the user token is requested for. This parameter can be <xref href="Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier" data-throw-if-not-resolved="false"></xref>.Any.
    return:
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult
      description: It contains Access Token, Refresh Token and the Access Token's expiration time. If acquiring token without user credential is not possible, the method throws AdalException.
  platform:
  - net40
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenSilent(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate,Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier)
  id: AcquireTokenSilent(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate,Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier)
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: AcquireTokenSilent(String, ClientAssertionCertificate, UserIdentifier)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenSilent(System.String, Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate, Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier)
  type: Method
  source:
    remote:
      path: src/ADAL.NET/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.NET/AuthenticationContext.cs
    startLine: 746
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Acquires security token without asking for user credential.
  example: []
  syntax:
    content: public AuthenticationResult AcquireTokenSilent(string resource, ClientAssertionCertificate clientCertificate, UserIdentifier userId)
    content.vb: Public Function AcquireTokenSilent(resource As String, clientCertificate As ClientAssertionCertificate, userId As UserIdentifier) As AuthenticationResult
    parameters:
    - id: resource
      type: System.String
      description: Identifier of the target resource that is the recipient of the requested token.
    - id: clientCertificate
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate
      description: The client certificate to use for token acquisition.
    - id: userId
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier
      description: Identifier of the user token is requested for. This parameter can be <xref href="Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier" data-throw-if-not-resolved="false"></xref>.Any.
    return:
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult
      description: It contains Access Token, Refresh Token and the Access Token's expiration time. If acquiring token without user credential is not possible, the method throws AdalException.
  platform:
  - net40
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenSilent(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertion,Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier)
  id: AcquireTokenSilent(System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertion,Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier)
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: AcquireTokenSilent(String, ClientAssertion, UserIdentifier)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenSilent(System.String, Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertion, Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier)
  type: Method
  source:
    remote:
      path: src/ADAL.NET/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.NET/AuthenticationContext.cs
    startLine: 758
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Acquires security token without asking for user credential.
  example: []
  syntax:
    content: public AuthenticationResult AcquireTokenSilent(string resource, ClientAssertion clientAssertion, UserIdentifier userId)
    content.vb: Public Function AcquireTokenSilent(resource As String, clientAssertion As ClientAssertion, userId As UserIdentifier) As AuthenticationResult
    parameters:
    - id: resource
      type: System.String
      description: Identifier of the target resource that is the recipient of the requested token.
    - id: clientAssertion
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertion
      description: The client assertion to use for token acquisition.
    - id: userId
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier
      description: Identifier of the user token is requested for. This parameter can be <xref href="Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier" data-throw-if-not-resolved="false"></xref>.Any.
    return:
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult
      description: It contains Access Token, Refresh Token and the Access Token's expiration time. If acquiring token without user credential is not possible, the method throws AdalException.
  platform:
  - net40
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.GetAuthorizationRequestURL(System.String,System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier,System.String)
  id: GetAuthorizationRequestURL(System.String,System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier,System.String)
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: GetAuthorizationRequestURL(String, String, Uri, UserIdentifier, String)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.GetAuthorizationRequestURL(System.String, System.String, System.Uri, Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier, System.String)
  type: Method
  source:
    remote:
      path: src/ADAL.NET/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.NET/AuthenticationContext.cs
    startLine: 772
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Gets URL of the authorize endpoint including the query parameters.
  example: []
  syntax:
    content: public Uri GetAuthorizationRequestURL(string resource, string clientId, Uri redirectUri, UserIdentifier userId, string extraQueryParameters)
    content.vb: Public Function GetAuthorizationRequestURL(resource As String, clientId As String, redirectUri As Uri, userId As UserIdentifier, extraQueryParameters As String) As Uri
    parameters:
    - id: resource
      type: System.String
      description: Identifier of the target resource that is the recipient of the requested token.
    - id: clientId
      type: System.String
      description: Identifier of the client requesting the token.
    - id: redirectUri
      type: System.Uri
      description: Address to return to upon receiving a response from the authority.
    - id: userId
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier
      description: Identifier of the user token is requested for. This parameter can be <xref href="Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier" data-throw-if-not-resolved="false"></xref>.Any.
    - id: extraQueryParameters
      type: System.String
      description: This parameter will be appended as is to the query string in the HTTP authentication request to the authority. The parameter can be null.
    return:
      type: System.Uri
      description: URL of the authorize endpoint including the query parameters.
  platform:
  - net40
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.CreateAsync(System.String)
  id: CreateAsync(System.String)
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: CreateAsync(String)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.CreateAsync(System.String)
  type: Method
  source:
    remote:
      path: src/ADAL.WinPhone/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.WinPhone/AuthenticationContext.cs
    startLine: 53
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: >-
    Factory method to create the context with the address of the authority.

    Using this constructor will turn ON validation of the authority URL by default if validation is supported for the authority address.
  example: []
  syntax:
    content: public static IAsyncOperation<AuthenticationContext> CreateAsync(string authority)
    content.vb: Public Shared Function CreateAsync(authority As String) As IAsyncOperation(Of AuthenticationContext)
    parameters:
    - id: authority
      type: System.String
      description: Address of the authority to issue token.
    return:
      type: Windows.Foundation.IAsyncOperation{Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext}
      description: IAsyncOperation representing the instance of the class.
  platform:
  - sl
  - wp8
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.CreateAsync(System.String,System.Boolean)
  id: CreateAsync(System.String,System.Boolean)
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: CreateAsync(String, Boolean)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.CreateAsync(System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: src/ADAL.WinPhone/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.WinPhone/AuthenticationContext.cs
    startLine: 65
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: >-
    Factory method to create the context with the address of the authority and flag to turn address validation off.

    Using this constructor, address validation can be turned off. Make sure you are aware of the security implication of not validating the address.
  example: []
  syntax:
    content: public static IAsyncOperation<AuthenticationContext> CreateAsync(string authority, bool validateAuthority)
    content.vb: Public Shared Function CreateAsync(authority As String, validateAuthority As Boolean) As IAsyncOperation(Of AuthenticationContext)
    parameters:
    - id: authority
      type: System.String
      description: Address of the authority to issue token.
    - id: validateAuthority
      type: System.Boolean
      description: Flag to turn address validation ON or OFF.
    return:
      type: Windows.Foundation.IAsyncOperation{Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext}
      description: IAsyncOperation representing the instance of the class.
  platform:
  - sl
  - wp8
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.CreateAsync(System.String,System.Boolean,Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache)
  id: CreateAsync(System.String,System.Boolean,Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache)
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: CreateAsync(String, Boolean, TokenCache)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.CreateAsync(System.String, System.Boolean, Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache)
  type: Method
  source:
    remote:
      path: src/ADAL.WinPhone/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.WinPhone/AuthenticationContext.cs
    startLine: 79
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: >-
    Factory method to create the context with the address of the authority and flag to turn address validation off.

    Using this constructor, address validation can be turned off. Make sure you are aware of the security implication of not validating the address.
  example: []
  syntax:
    content: public static IAsyncOperation<AuthenticationContext> CreateAsync(string authority, bool validateAuthority, TokenCache tokenCache)
    content.vb: Public Shared Function CreateAsync(authority As String, validateAuthority As Boolean, tokenCache As TokenCache) As IAsyncOperation(Of AuthenticationContext)
    parameters:
    - id: authority
      type: System.String
      description: Address of the authority to issue token.
    - id: validateAuthority
      type: System.Boolean
      description: Flag to turn address validation ON or OFF.
    - id: tokenCache
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache
      description: Token cache used to lookup cached tokens on calls to AcquireToken
    return:
      type: Windows.Foundation.IAsyncOperation{Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext}
      description: IAsyncOperation representing the instance of the class.
  platform:
  - sl
  - wp8
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.CreateAsync(System.String,System.Boolean,Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache,System.Guid)
  id: CreateAsync(System.String,System.Boolean,Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache,System.Guid)
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: CreateAsync(String, Boolean, TokenCache, Guid)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.CreateAsync(System.String, System.Boolean, Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache, System.Guid)
  type: Method
  source:
    remote:
      path: src/ADAL.WinPhone/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.WinPhone/AuthenticationContext.cs
    startLine: 93
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: >-
    Factory method to create the context with the address of the authority and flag to turn address validation off.

    Using this constructor, address validation can be turned off. Make sure you are aware of the security implication of not validating the address.
  example: []
  syntax:
    content: public static IAsyncOperation<AuthenticationContext> CreateAsync(string authority, bool validateAuthority, TokenCache tokenCache, Guid correlationId)
    content.vb: Public Shared Function CreateAsync(authority As String, validateAuthority As Boolean, tokenCache As TokenCache, correlationId As Guid) As IAsyncOperation(Of AuthenticationContext)
    parameters:
    - id: authority
      type: System.String
      description: Address of the authority to issue token.
    - id: validateAuthority
      type: System.Boolean
      description: Flag to turn address validation ON or OFF.
    - id: tokenCache
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache
      description: Token cache used to lookup cached tokens on calls to AcquireToken
    - id: correlationId
      type: System.Guid
      description: Correlation Id which would be sent to the service with the next request
    return:
      type: Windows.Foundation.IAsyncOperation{Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext}
      description: IAsyncOperation representing the instance of the class.
  platform:
  - wp8
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenAndContinue(System.String,System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContextDelegate)
  id: AcquireTokenAndContinue(System.String,System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContextDelegate)
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: AcquireTokenAndContinue(String, String, Uri, AuthenticationContextDelegate)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenAndContinue(System.String, System.String, System.Uri, Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContextDelegate)
  type: Method
  source:
    remote:
      path: src/ADAL.WinPhone/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.WinPhone/AuthenticationContext.cs
    startLine: 106
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Starts security token acquisition from the authority.
  example: []
  syntax:
    content: public void AcquireTokenAndContinue(string resource, string clientId, Uri redirectUri, AuthenticationContextDelegate authDelegate)
    content.vb: Public Sub AcquireTokenAndContinue(resource As String, clientId As String, redirectUri As Uri, authDelegate As AuthenticationContextDelegate)
    parameters:
    - id: resource
      type: System.String
      description: Identifier of the target resource that is the recipient of the requested token.
    - id: clientId
      type: System.String
      description: Identifier of the client requesting the token.
    - id: redirectUri
      type: System.Uri
      description: Address to return to upon receiving a response from the authority. Pass null or application's callback URI for SSO mode.
    - id: authDelegate
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContextDelegate
      description: Optional delegate that can be passed by the developer to process authentication result.
  platform:
  - wp8
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenAndContinue(System.String,System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier,Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContextDelegate)
  id: AcquireTokenAndContinue(System.String,System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier,Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContextDelegate)
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: AcquireTokenAndContinue(String, String, Uri, UserIdentifier, AuthenticationContextDelegate)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenAndContinue(System.String, System.String, System.Uri, Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier, Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContextDelegate)
  type: Method
  source:
    remote:
      path: src/ADAL.WinPhone/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.WinPhone/AuthenticationContext.cs
    startLine: 122
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Starts security token acquisition from the authority.
  example: []
  syntax:
    content: public void AcquireTokenAndContinue(string resource, string clientId, Uri redirectUri, UserIdentifier userId, AuthenticationContextDelegate authDelegate)
    content.vb: Public Sub AcquireTokenAndContinue(resource As String, clientId As String, redirectUri As Uri, userId As UserIdentifier, authDelegate As AuthenticationContextDelegate)
    parameters:
    - id: resource
      type: System.String
      description: Identifier of the target resource that is the recipient of the requested token.
    - id: clientId
      type: System.String
      description: Identifier of the client requesting the token.
    - id: redirectUri
      type: System.Uri
      description: Address to return to upon receiving a response from the authority. Pass null or application's callback URI for SSO mode.
    - id: userId
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier
      description: >-
        Identifier of the user token is requested for. If created from DisplayableId, this parameter will be used to pre-populate the username field in the authentication form. Please note that the end user can still edit the username field and authenticate as a different user.

        If you want to be notified of such change with an exception, create UserIdentifier with type RequiredDisplayableId. This parameter can be <xref href="Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier" data-throw-if-not-resolved="false"></xref>.Any.
    - id: authDelegate
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContextDelegate
      description: Optional delegate that can be passed by the developer to process authentication result.
  platform:
  - wp8
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenAndContinue(System.String,System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier,System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContextDelegate)
  id: AcquireTokenAndContinue(System.String,System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier,System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContextDelegate)
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: AcquireTokenAndContinue(String, String, Uri, UserIdentifier, String, AuthenticationContextDelegate)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenAndContinue(System.String, System.String, System.Uri, Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier, System.String, Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContextDelegate)
  type: Method
  source:
    remote:
      path: src/ADAL.WinPhone/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.WinPhone/AuthenticationContext.cs
    startLine: 139
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Acquires security token from the authority.
  example: []
  syntax:
    content: public void AcquireTokenAndContinue(string resource, string clientId, Uri redirectUri, UserIdentifier userId, string extraQueryParameters, AuthenticationContextDelegate authDelegate)
    content.vb: Public Sub AcquireTokenAndContinue(resource As String, clientId As String, redirectUri As Uri, userId As UserIdentifier, extraQueryParameters As String, authDelegate As AuthenticationContextDelegate)
    parameters:
    - id: resource
      type: System.String
      description: Identifier of the target resource that is the recipient of the requested token.
    - id: clientId
      type: System.String
      description: Identifier of the client requesting the token.
    - id: redirectUri
      type: System.Uri
      description: Address to return to upon receiving a response from the authority. Pass null or application's callback URI for SSO mode.
    - id: userId
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier
      description: >-
        Identifier of the user token is requested for. If created from DisplayableId, this parameter will be used to pre-populate the username field in the authentication form. Please note that the end user can still edit the username field and authenticate as a different user.

        If you want to be notified of such change with an exception, create UserIdentifier with type RequiredDisplayableId. This parameter can be <xref href="Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier" data-throw-if-not-resolved="false"></xref>.Any.
    - id: extraQueryParameters
      type: System.String
      description: This parameter will be appended as is to the query string in the HTTP authentication request to the authority. The parameter can be null.
    - id: authDelegate
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContextDelegate
      description: Optional delegate that can be passed by the developer to process authentication result.
  platform:
  - wp8
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.ContinueAcquireTokenAsync(Windows.ApplicationModel.Activation.IWebAuthenticationBrokerContinuationEventArgs)
  id: ContinueAcquireTokenAsync(Windows.ApplicationModel.Activation.IWebAuthenticationBrokerContinuationEventArgs)
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: ContinueAcquireTokenAsync(IWebAuthenticationBrokerContinuationEventArgs)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.ContinueAcquireTokenAsync(Windows.ApplicationModel.Activation.IWebAuthenticationBrokerContinuationEventArgs)
  type: Method
  source:
    remote:
      path: src/ADAL.WinPhone/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.WinPhone/AuthenticationContext.cs
    startLine: 149
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Continues security token acquisition from the authority.
  example: []
  syntax:
    content: public IAsyncOperation<AuthenticationResult> ContinueAcquireTokenAsync(IWebAuthenticationBrokerContinuationEventArgs args)
    content.vb: Public Function ContinueAcquireTokenAsync(args As IWebAuthenticationBrokerContinuationEventArgs) As IAsyncOperation(Of AuthenticationResult)
    parameters:
    - id: args
      type: Windows.ApplicationModel.Activation.IWebAuthenticationBrokerContinuationEventArgs
      description: Information to an app that was launched after being suspended for a web authentication broker operation.
    return:
      type: Windows.Foundation.IAsyncOperation{Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult}
      description: It contains Access Token, Refresh Token and the Access Token's expiration time.
  platform:
  - wp8
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.CreateAsync(System.String,System.Boolean,Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache,Guid)
  id: CreateAsync(System.String,System.Boolean,Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache,Guid)
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  href: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.yml
  langs:
  - csharp
  - vb
  name: CreateAsync(String, Boolean, TokenCache, Guid)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.CreateAsync(System.String, System.Boolean, Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache, Guid)
  type: Method
  source:
    remote:
      path: src/ADAL.WinPhone/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.WinPhone/AuthenticationContext.cs
    startLine: 93
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: >-
    Factory method to create the context with the address of the authority and flag to turn address validation off.

    Using this constructor, address validation can be turned off. Make sure you are aware of the security implication of not validating the address.
  example: []
  syntax:
    content: public static IAsyncOperation<AuthenticationContext> CreateAsync(string authority, bool validateAuthority, TokenCache tokenCache, Guid correlationId)
    content.vb: Public Shared Function CreateAsync(authority As String, validateAuthority As Boolean, tokenCache As TokenCache, correlationId As Guid) As IAsyncOperation(Of AuthenticationContext)
    parameters:
    - id: authority
      type: System.String
      description: Address of the authority to issue token.
    - id: validateAuthority
      type: System.Boolean
      description: Flag to turn address validation ON or OFF.
    - id: tokenCache
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache
      description: Token cache used to lookup cached tokens on calls to AcquireToken
    - id: correlationId
      type: Guid
      description: Correlation Id which would be sent to the service with the next request
    return:
      type: IAsyncOperation{Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext}
      description: IAsyncOperation representing the instance of the class.
  platform:
  - sl
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenAndContinue(System.String,System.String,Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContextDelegate)
  id: AcquireTokenAndContinue(System.String,System.String,Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContextDelegate)
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  href: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.yml
  langs:
  - csharp
  - vb
  name: AcquireTokenAndContinue(String, String, Uri, AuthenticationContextDelegate)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenAndContinue(System.String, System.String, Uri, Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContextDelegate)
  type: Method
  source:
    remote:
      path: src/ADAL.WinPhone/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.WinPhone/AuthenticationContext.cs
    startLine: 106
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Starts security token acquisition from the authority.
  example: []
  syntax:
    content: public void AcquireTokenAndContinue(string resource, string clientId, Uri redirectUri, AuthenticationContextDelegate authDelegate)
    content.vb: Public Sub AcquireTokenAndContinue(resource As String, clientId As String, redirectUri As Uri, authDelegate As AuthenticationContextDelegate)
    parameters:
    - id: resource
      type: System.String
      description: Identifier of the target resource that is the recipient of the requested token.
    - id: clientId
      type: System.String
      description: Identifier of the client requesting the token.
    - id: redirectUri
      type: Uri
      description: Address to return to upon receiving a response from the authority. Pass null or application's callback URI for SSO mode.
    - id: authDelegate
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContextDelegate
      description: Optional delegate that can be passed by the developer to process authentication result.
  platform:
  - sl
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenAndContinue(System.String,System.String,Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier,Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContextDelegate)
  id: AcquireTokenAndContinue(System.String,System.String,Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier,Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContextDelegate)
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  href: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.yml
  langs:
  - csharp
  - vb
  name: AcquireTokenAndContinue(String, String, Uri, UserIdentifier, AuthenticationContextDelegate)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenAndContinue(System.String, System.String, Uri, Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier, Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContextDelegate)
  type: Method
  source:
    remote:
      path: src/ADAL.WinPhone/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.WinPhone/AuthenticationContext.cs
    startLine: 122
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Starts security token acquisition from the authority.
  example: []
  syntax:
    content: public void AcquireTokenAndContinue(string resource, string clientId, Uri redirectUri, UserIdentifier userId, AuthenticationContextDelegate authDelegate)
    content.vb: Public Sub AcquireTokenAndContinue(resource As String, clientId As String, redirectUri As Uri, userId As UserIdentifier, authDelegate As AuthenticationContextDelegate)
    parameters:
    - id: resource
      type: System.String
      description: Identifier of the target resource that is the recipient of the requested token.
    - id: clientId
      type: System.String
      description: Identifier of the client requesting the token.
    - id: redirectUri
      type: Uri
      description: Address to return to upon receiving a response from the authority. Pass null or application's callback URI for SSO mode.
    - id: userId
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier
      description: >-
        Identifier of the user token is requested for. If created from DisplayableId, this parameter will be used to pre-populate the username field in the authentication form. Please note that the end user can still edit the username field and authenticate as a different user.

        If you want to be notified of such change with an exception, create UserIdentifier with type RequiredDisplayableId. This parameter can be @'Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier'.Any.
    - id: authDelegate
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContextDelegate
      description: Optional delegate that can be passed by the developer to process authentication result.
  platform:
  - sl
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenAndContinue(System.String,System.String,Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier,System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContextDelegate)
  id: AcquireTokenAndContinue(System.String,System.String,Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier,System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContextDelegate)
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  href: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.yml
  langs:
  - csharp
  - vb
  name: AcquireTokenAndContinue(String, String, Uri, UserIdentifier, String, AuthenticationContextDelegate)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenAndContinue(System.String, System.String, Uri, Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier, System.String, Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContextDelegate)
  type: Method
  source:
    remote:
      path: src/ADAL.WinPhone/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.WinPhone/AuthenticationContext.cs
    startLine: 139
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Acquires security token from the authority.
  example: []
  syntax:
    content: public void AcquireTokenAndContinue(string resource, string clientId, Uri redirectUri, UserIdentifier userId, string extraQueryParameters, AuthenticationContextDelegate authDelegate)
    content.vb: Public Sub AcquireTokenAndContinue(resource As String, clientId As String, redirectUri As Uri, userId As UserIdentifier, extraQueryParameters As String, authDelegate As AuthenticationContextDelegate)
    parameters:
    - id: resource
      type: System.String
      description: Identifier of the target resource that is the recipient of the requested token.
    - id: clientId
      type: System.String
      description: Identifier of the client requesting the token.
    - id: redirectUri
      type: Uri
      description: Address to return to upon receiving a response from the authority. Pass null or application's callback URI for SSO mode.
    - id: userId
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier
      description: >-
        Identifier of the user token is requested for. If created from DisplayableId, this parameter will be used to pre-populate the username field in the authentication form. Please note that the end user can still edit the username field and authenticate as a different user.

        If you want to be notified of such change with an exception, create UserIdentifier with type RequiredDisplayableId. This parameter can be @'Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier'.Any.
    - id: extraQueryParameters
      type: System.String
      description: This parameter will be appended as is to the query string in the HTTP authentication request to the authority. The parameter can be null.
    - id: authDelegate
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContextDelegate
      description: Optional delegate that can be passed by the developer to process authentication result.
  platform:
  - sl
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.ContinueAcquireTokenAsync(IWebAuthenticationBrokerContinuationEventArgs)
  id: ContinueAcquireTokenAsync(IWebAuthenticationBrokerContinuationEventArgs)
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  href: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.yml
  langs:
  - csharp
  - vb
  name: ContinueAcquireTokenAsync(IWebAuthenticationBrokerContinuationEventArgs)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.ContinueAcquireTokenAsync(IWebAuthenticationBrokerContinuationEventArgs)
  type: Method
  source:
    remote:
      path: src/ADAL.WinPhone/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.WinPhone/AuthenticationContext.cs
    startLine: 149
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Continues security token acquisition from the authority.
  example: []
  syntax:
    content: public IAsyncOperation<AuthenticationResult> ContinueAcquireTokenAsync(IWebAuthenticationBrokerContinuationEventArgs args)
    content.vb: Public Function ContinueAcquireTokenAsync(args As IWebAuthenticationBrokerContinuationEventArgs) As IAsyncOperation(Of AuthenticationResult)
    parameters:
    - id: args
      type: IWebAuthenticationBrokerContinuationEventArgs
      description: Information to an app that was launched after being suspended for a web authentication broker operation.
    return:
      type: IAsyncOperation{Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult}
      description: It contains Access Token, Refresh Token and the Access Token's expiration time.
  platform:
  - sl
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.UseCorporateNetwork
  id: UseCorporateNetwork
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: UseCorporateNetwork
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.UseCorporateNetwork
  type: Property
  source:
    remote:
      path: src/ADAL.WinRT/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.WinRT/AuthenticationContext.cs
    startLine: 36
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: >-
    Gets or Sets flag to enable logged in user authentication. Note that enabling this flag requires some extra application capabilites.

    This flag only works in SSO mode and is ignored otherwise. To enable SSO mode, call AcquireTokenAsync with null or application's callback URI as redirectUri.
  example: []
  syntax:
    content: public bool UseCorporateNetwork { get; set; }
    content.vb: Public Property UseCorporateNetwork As Boolean
    parameters: []
    return:
      type: System.Boolean
  platform:
  - rt
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenAsync(System.String,System.String,System.Uri)
  id: AcquireTokenAsync(System.String,System.String,System.Uri)
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: AcquireTokenAsync(String, String, Uri)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenAsync(System.String, System.String, System.Uri)
  type: Method
  source:
    remote:
      path: src/ADAL.WinRT/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.WinRT/AuthenticationContext.cs
    startLine: 69
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Acquires security token from the authority.
  example: []
  syntax:
    content: public IAsyncOperation<AuthenticationResult> AcquireTokenAsync(string resource, string clientId, Uri redirectUri)
    content.vb: Public Function AcquireTokenAsync(resource As String, clientId As String, redirectUri As Uri) As IAsyncOperation(Of AuthenticationResult)
    parameters:
    - id: resource
      type: System.String
      description: Identifier of the target resource that is the recipient of the requested token.
    - id: clientId
      type: System.String
      description: Identifier of the client requesting the token.
    - id: redirectUri
      type: System.Uri
      description: Address to return to upon receiving a response from the authority. Pass null or application's callback URI for SSO mode.
    return:
      type: Windows.Foundation.IAsyncOperation{Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult}
      description: It contains Access Token, Refresh Token and the Access Token's expiration time.
  platform:
  - rt
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenAsync(System.String,System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.PromptBehavior)
  id: AcquireTokenAsync(System.String,System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.PromptBehavior)
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: AcquireTokenAsync(String, String, Uri, PromptBehavior)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenAsync(System.String, System.String, System.Uri, Microsoft.IdentityModel.Clients.ActiveDirectory.PromptBehavior)
  type: Method
  source:
    remote:
      path: src/ADAL.WinRT/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.WinRT/AuthenticationContext.cs
    startLine: 83
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Acquires security token from the authority.
  example: []
  syntax:
    content: public IAsyncOperation<AuthenticationResult> AcquireTokenAsync(string resource, string clientId, Uri redirectUri, PromptBehavior promptBehavior)
    content.vb: Public Function AcquireTokenAsync(resource As String, clientId As String, redirectUri As Uri, promptBehavior As PromptBehavior) As IAsyncOperation(Of AuthenticationResult)
    parameters:
    - id: resource
      type: System.String
      description: Identifier of the target resource that is the recipient of the requested token.
    - id: clientId
      type: System.String
      description: Identifier of the client requesting the token.
    - id: redirectUri
      type: System.Uri
      description: Address to return to upon receiving a response from the authority. Pass null or application's callback URI for SSO mode.
    - id: promptBehavior
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.PromptBehavior
      description: If <xref href="Microsoft.IdentityModel.Clients.ActiveDirectory.PromptBehavior.Always" data-throw-if-not-resolved="false"></xref>, asks service to show user the authentication page which gives them chance to authenticate as a different user.
    return:
      type: Windows.Foundation.IAsyncOperation{Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult}
      description: It contains Access Token, Refresh Token and the Access Token's expiration time.
  platform:
  - rt
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenAsync(System.String,System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.PromptBehavior,Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier)
  id: AcquireTokenAsync(System.String,System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.PromptBehavior,Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier)
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: AcquireTokenAsync(String, String, Uri, PromptBehavior, UserIdentifier)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenAsync(System.String, System.String, System.Uri, Microsoft.IdentityModel.Clients.ActiveDirectory.PromptBehavior, Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier)
  type: Method
  source:
    remote:
      path: src/ADAL.WinRT/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.WinRT/AuthenticationContext.cs
    startLine: 99
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Acquires security token from the authority.
  example: []
  syntax:
    content: public IAsyncOperation<AuthenticationResult> AcquireTokenAsync(string resource, string clientId, Uri redirectUri, PromptBehavior promptBehavior, UserIdentifier userId)
    content.vb: Public Function AcquireTokenAsync(resource As String, clientId As String, redirectUri As Uri, promptBehavior As PromptBehavior, userId As UserIdentifier) As IAsyncOperation(Of AuthenticationResult)
    parameters:
    - id: resource
      type: System.String
      description: Identifier of the target resource that is the recipient of the requested token.
    - id: clientId
      type: System.String
      description: Identifier of the client requesting the token.
    - id: redirectUri
      type: System.Uri
      description: Address to return to upon receiving a response from the authority. Pass null or application's callback URI for SSO mode.
    - id: promptBehavior
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.PromptBehavior
      description: If <xref href="Microsoft.IdentityModel.Clients.ActiveDirectory.PromptBehavior.Always" data-throw-if-not-resolved="false"></xref>, asks service to show user the authentication page which gives them chance to authenticate as a different user.
    - id: userId
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier
      description: >-
        Identifier of the user token is requested for. If created from DisplayableId, this parameter will be used to pre-populate the username field in the authentication form. Please note that the end user can still edit the username field and authenticate as a different user.

        If you want to be notified of such change with an exception, create UserIdentifier with type RequiredDisplayableId. This parameter can be <xref href="Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier" data-throw-if-not-resolved="false"></xref>.Any.
    return:
      type: Windows.Foundation.IAsyncOperation{Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult}
      description: It contains Access Token, Refresh Token and the Access Token's expiration time.
  platform:
  - rt
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenAsync(System.String,System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.PromptBehavior,Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier,System.String)
  id: AcquireTokenAsync(System.String,System.String,System.Uri,Microsoft.IdentityModel.Clients.ActiveDirectory.PromptBehavior,Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier,System.String)
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  langs:
  - csharp
  - vb
  name: AcquireTokenAsync(String, String, Uri, PromptBehavior, UserIdentifier, String)
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenAsync(System.String, System.String, System.Uri, Microsoft.IdentityModel.Clients.ActiveDirectory.PromptBehavior, Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier, System.String)
  type: Method
  source:
    remote:
      path: src/ADAL.WinRT/AuthenticationContext.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.WinRT/AuthenticationContext.cs
    startLine: 116
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Acquires security token from the authority.
  example: []
  syntax:
    content: public IAsyncOperation<AuthenticationResult> AcquireTokenAsync(string resource, string clientId, Uri redirectUri, PromptBehavior promptBehavior, UserIdentifier userId, string extraQueryParameters)
    content.vb: Public Function AcquireTokenAsync(resource As String, clientId As String, redirectUri As Uri, promptBehavior As PromptBehavior, userId As UserIdentifier, extraQueryParameters As String) As IAsyncOperation(Of AuthenticationResult)
    parameters:
    - id: resource
      type: System.String
      description: Identifier of the target resource that is the recipient of the requested token.
    - id: clientId
      type: System.String
      description: Identifier of the client requesting the token.
    - id: redirectUri
      type: System.Uri
      description: Address to return to upon receiving a response from the authority. Pass null or application's callback URI for SSO mode.
    - id: promptBehavior
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.PromptBehavior
      description: If <xref href="Microsoft.IdentityModel.Clients.ActiveDirectory.PromptBehavior.Always" data-throw-if-not-resolved="false"></xref>, asks service to show user the authentication page which gives them chance to authenticate as a different user.
    - id: userId
      type: Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier
      description: >-
        Identifier of the user token is requested for. If created from DisplayableId, this parameter will be used to pre-populate the username field in the authentication form. Please note that the end user can still edit the username field and authenticate as a different user.

        If you want to be notified of such change with an exception, create UserIdentifier with type RequiredDisplayableId. This parameter can be <xref href="Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier" data-throw-if-not-resolved="false"></xref>.Any.
    - id: extraQueryParameters
      type: System.String
      description: This parameter will be appended as is to the query string in the HTTP authentication request to the authority. The parameter can be null.
    return:
      type: Windows.Foundation.IAsyncOperation{Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult}
      description: It contains Access Token, Refresh Token and the Access Token's expiration time.
  platform:
  - rt
references:
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory
  isExternal: false
  name: Microsoft.IdentityModel.Clients.ActiveDirectory
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory
  isExternal: false
  name: TokenCache
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCache
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  isExternal: false
  name: AuthenticationContext
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  fullName: System.Guid
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.UserCredential
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory
  isExternal: false
  name: UserCredential
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.UserCredential
- uid: System.Threading.Tasks.Task{Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<AuthenticationResult>
  name.vb: Task(Of AuthenticationResult)
  fullName: System.Threading.Tasks.Task<Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult>
  fullName.vb: System.Threading.Tasks.Task(Of Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult
    name: AuthenticationResult
    fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult
    name: AuthenticationResult
    fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult
  - name: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<TResult>
  name.vb: Task(Of TResult)
  fullName: System.Threading.Tasks.Task<TResult>
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Threading.Tasks
  isExternal: false
  name: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.UserAssertion
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory
  isExternal: false
  name: UserAssertion
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.UserAssertion
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory
  isExternal: false
  name: ClientCredential
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.ClientCredential
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory
  isExternal: false
  name: ClientAssertionCertificate
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertion
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory
  isExternal: false
  name: ClientAssertion
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertion
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenSilentAsync(System.String,System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  fullName: System.Uri
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory
  isExternal: false
  name: UserIdentifier
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory
  isExternal: false
  name: AuthenticationResult
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.PromptBehavior.Always
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.PromptBehavior
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory
  isExternal: false
  name: PromptBehavior
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.PromptBehavior
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.AcquireTokenSilent(System.String,System.String,Microsoft.IdentityModel.Clients.ActiveDirectory.UserIdentifier)
- uid: Windows.Foundation.IAsyncOperation{Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult}
  parent: Windows.Foundation
  definition: Windows.Foundation.IAsyncOperation`1
  name: IAsyncOperation<AuthenticationResult>
  name.vb: IAsyncOperation(Of AuthenticationResult)
  fullName: Windows.Foundation.IAsyncOperation<Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult>
  fullName.vb: Windows.Foundation.IAsyncOperation(Of Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult)
  spec.csharp:
  - uid: Windows.Foundation.IAsyncOperation`1
    name: IAsyncOperation
    fullName: Windows.Foundation.IAsyncOperation
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult
    name: AuthenticationResult
    fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Windows.Foundation.IAsyncOperation`1
    name: IAsyncOperation
    fullName: Windows.Foundation.IAsyncOperation
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult
    name: AuthenticationResult
    fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult
  - name: )
    fullName: )
- uid: Windows.Foundation.IAsyncOperation`1
  parent: Windows.Foundation
  isExternal: true
  name: IAsyncOperation<TResult>
  name.vb: IAsyncOperation(Of TResult)
  fullName: Windows.Foundation.IAsyncOperation<TResult>
  fullName.vb: Windows.Foundation.IAsyncOperation(Of TResult)
  spec.csharp:
  - uid: Windows.Foundation.IAsyncOperation`1
    name: IAsyncOperation
    fullName: Windows.Foundation.IAsyncOperation
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Windows.Foundation.IAsyncOperation`1
    name: IAsyncOperation
    fullName: Windows.Foundation.IAsyncOperation
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: Windows.Foundation
  isExternal: false
  name: Windows.Foundation
  fullName: Windows.Foundation
- uid: Windows.Foundation.IAsyncOperation{Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext}
  parent: Windows.Foundation
  definition: Windows.Foundation.IAsyncOperation`1
  name: IAsyncOperation<AuthenticationContext>
  name.vb: IAsyncOperation(Of AuthenticationContext)
  fullName: Windows.Foundation.IAsyncOperation<Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext>
  fullName.vb: Windows.Foundation.IAsyncOperation(Of Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext)
  spec.csharp:
  - uid: Windows.Foundation.IAsyncOperation`1
    name: IAsyncOperation
    fullName: Windows.Foundation.IAsyncOperation
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
    name: AuthenticationContext
    fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: Windows.Foundation.IAsyncOperation`1
    name: IAsyncOperation
    fullName: Windows.Foundation.IAsyncOperation
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
    name: AuthenticationContext
    fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
  - name: )
    fullName: )
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContextDelegate
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory
  isExternal: false
  name: AuthenticationContextDelegate
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContextDelegate
- uid: Windows.ApplicationModel.Activation.IWebAuthenticationBrokerContinuationEventArgs
  parent: Windows.ApplicationModel.Activation
  isExternal: true
  name: IWebAuthenticationBrokerContinuationEventArgs
  fullName: Windows.ApplicationModel.Activation.IWebAuthenticationBrokerContinuationEventArgs
- uid: Windows.ApplicationModel.Activation
  isExternal: false
  name: Windows.ApplicationModel.Activation
  fullName: Windows.ApplicationModel.Activation
- uid: IAsyncOperation{Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext}
  definition: IAsyncOperation`1
  href: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.yml
  name: IAsyncOperation<AuthenticationContext>
  name.vb: IAsyncOperation(Of AuthenticationContext)
  fullName: IAsyncOperation<Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext>
  fullName.vb: IAsyncOperation(Of Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext)
  spec.csharp:
  - uid: IAsyncOperation`1
    name: IAsyncOperation
    fullName: IAsyncOperation
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
    name: AuthenticationContext
    fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
    href: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.yml
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IAsyncOperation`1
    name: IAsyncOperation
    fullName: IAsyncOperation
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
    name: AuthenticationContext
    fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext
    href: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationContext.yml
  - name: )
    fullName: )
- uid: IAsyncOperation`1
  isExternal: true
  name: IAsyncOperation<>
  name.vb: IAsyncOperation(Of )
  fullName: IAsyncOperation<>
  fullName.vb: IAsyncOperation(Of )
  spec.csharp:
  - uid: IAsyncOperation`1
    name: IAsyncOperation
    fullName: IAsyncOperation
    isExternal: true
  - name: <
    fullName: <
  - {}
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IAsyncOperation`1
    name: IAsyncOperation
    fullName: IAsyncOperation
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - {}
  - name: )
    fullName: )
- uid: Guid
  isExternal: true
  name: Guid
  fullName: Guid
- uid: Uri
  isExternal: true
  name: Uri
  fullName: Uri
- uid: IWebAuthenticationBrokerContinuationEventArgs
  isExternal: true
  name: IWebAuthenticationBrokerContinuationEventArgs
  fullName: IWebAuthenticationBrokerContinuationEventArgs
- uid: IAsyncOperation{Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult}
  definition: IAsyncOperation`1
  href: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult.yml
  name: IAsyncOperation<AuthenticationResult>
  name.vb: IAsyncOperation(Of AuthenticationResult)
  fullName: IAsyncOperation<Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult>
  fullName.vb: IAsyncOperation(Of Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult)
  spec.csharp:
  - uid: IAsyncOperation`1
    name: IAsyncOperation
    fullName: IAsyncOperation
    isExternal: true
  - name: <
    fullName: <
  - uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult
    name: AuthenticationResult
    fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult
    href: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult.yml
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: IAsyncOperation`1
    name: IAsyncOperation
    fullName: IAsyncOperation
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult
    name: AuthenticationResult
    fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult
    href: Microsoft.IdentityModel.Clients.ActiveDirectory.AuthenticationResult.yml
  - name: )
    fullName: )
metadata: {}
