items:
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheItem
  id: TokenCacheItem
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory
  children:
  - Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheItem.AccessToken
  - Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheItem.Authority
  - Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheItem.ClientId
  - Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheItem.DisplayableId
  - Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheItem.ExpiresOn
  - Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheItem.FamilyName
  - Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheItem.GivenName
  - Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheItem.IdentityProvider
  - Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheItem.IdToken
  - Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheItem.IsMultipleResourceRefreshToken
  - Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheItem.RefreshToken
  - Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheItem.Resource
  - Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheItem.TenantId
  - Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheItem.UniqueId
  langs:
  - csharp
  - vb
  name: TokenCacheItem
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheItem
  type: Class
  source:
    remote:
      path: src/ADAL.Common/TokenCacheItem.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.Common/TokenCacheItem.cs
    startLine: 25
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Token cache item
  example: []
  syntax:
    content: public sealed class TokenCacheItem
    content.vb: Public NotInheritable Class TokenCacheItem
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  platform:
  - net40
  - rt
  - sl
  - wp8
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheItem.Authority
  id: Authority
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheItem
  langs:
  - csharp
  - vb
  name: Authority
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheItem.Authority
  type: Property
  source:
    remote:
      path: src/ADAL.Common/TokenCacheItem.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.Common/TokenCacheItem.cs
    startLine: 56
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Gets the Authority.
  example: []
  syntax:
    content: public string Authority { get; }
    content.vb: Public ReadOnly Property Authority As String
    parameters: []
    return:
      type: System.String
  platform:
  - net40
  - rt
  - sl
  - wp8
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheItem.ClientId
  id: ClientId
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheItem
  langs:
  - csharp
  - vb
  name: ClientId
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheItem.ClientId
  type: Property
  source:
    remote:
      path: src/ADAL.Common/TokenCacheItem.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.Common/TokenCacheItem.cs
    startLine: 61
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Gets the ClientId.
  example: []
  syntax:
    content: public string ClientId { get; }
    content.vb: Public ReadOnly Property ClientId As String
    parameters: []
    return:
      type: System.String
  platform:
  - net40
  - rt
  - sl
  - wp8
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheItem.ExpiresOn
  id: ExpiresOn
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheItem
  langs:
  - csharp
  - vb
  name: ExpiresOn
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheItem.ExpiresOn
  type: Property
  source:
    remote:
      path: src/ADAL.Common/TokenCacheItem.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.Common/TokenCacheItem.cs
    startLine: 66
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Gets the Expiration.
  example: []
  syntax:
    content: public DateTimeOffset ExpiresOn { get; }
    content.vb: Public ReadOnly Property ExpiresOn As DateTimeOffset
    parameters: []
    return:
      type: System.DateTimeOffset
  platform:
  - net40
  - rt
  - sl
  - wp8
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheItem.FamilyName
  id: FamilyName
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheItem
  langs:
  - csharp
  - vb
  name: FamilyName
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheItem.FamilyName
  type: Property
  source:
    remote:
      path: src/ADAL.Common/TokenCacheItem.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.Common/TokenCacheItem.cs
    startLine: 71
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Gets the FamilyName.
  example: []
  syntax:
    content: public string FamilyName { get; }
    content.vb: Public ReadOnly Property FamilyName As String
    parameters: []
    return:
      type: System.String
  platform:
  - net40
  - rt
  - sl
  - wp8
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheItem.GivenName
  id: GivenName
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheItem
  langs:
  - csharp
  - vb
  name: GivenName
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheItem.GivenName
  type: Property
  source:
    remote:
      path: src/ADAL.Common/TokenCacheItem.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.Common/TokenCacheItem.cs
    startLine: 76
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Gets the GivenName.
  example: []
  syntax:
    content: public string GivenName { get; }
    content.vb: Public ReadOnly Property GivenName As String
    parameters: []
    return:
      type: System.String
  platform:
  - net40
  - rt
  - sl
  - wp8
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheItem.IdentityProvider
  id: IdentityProvider
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheItem
  langs:
  - csharp
  - vb
  name: IdentityProvider
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheItem.IdentityProvider
  type: Property
  source:
    remote:
      path: src/ADAL.Common/TokenCacheItem.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.Common/TokenCacheItem.cs
    startLine: 81
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Gets the IdentityProviderName.
  example: []
  syntax:
    content: public string IdentityProvider { get; }
    content.vb: Public ReadOnly Property IdentityProvider As String
    parameters: []
    return:
      type: System.String
  platform:
  - net40
  - rt
  - sl
  - wp8
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheItem.IsMultipleResourceRefreshToken
  id: IsMultipleResourceRefreshToken
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheItem
  langs:
  - csharp
  - vb
  name: IsMultipleResourceRefreshToken
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheItem.IsMultipleResourceRefreshToken
  type: Property
  source:
    remote:
      path: src/ADAL.Common/TokenCacheItem.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.Common/TokenCacheItem.cs
    startLine: 86
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Gets a value indicating whether the RefreshToken applies to multiple resources.
  example: []
  syntax:
    content: public bool IsMultipleResourceRefreshToken { get; }
    content.vb: Public ReadOnly Property IsMultipleResourceRefreshToken As Boolean
    parameters: []
    return:
      type: System.Boolean
  platform:
  - net40
  - rt
  - sl
  - wp8
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheItem.Resource
  id: Resource
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheItem
  langs:
  - csharp
  - vb
  name: Resource
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheItem.Resource
  type: Property
  source:
    remote:
      path: src/ADAL.Common/TokenCacheItem.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.Common/TokenCacheItem.cs
    startLine: 91
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Gets the Resource.
  example: []
  syntax:
    content: public string Resource { get; }
    content.vb: Public ReadOnly Property Resource As String
    parameters: []
    return:
      type: System.String
  platform:
  - net40
  - rt
  - sl
  - wp8
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheItem.TenantId
  id: TenantId
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheItem
  langs:
  - csharp
  - vb
  name: TenantId
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheItem.TenantId
  type: Property
  source:
    remote:
      path: src/ADAL.Common/TokenCacheItem.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.Common/TokenCacheItem.cs
    startLine: 96
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Gets the TenantId.
  example: []
  syntax:
    content: public string TenantId { get; }
    content.vb: Public ReadOnly Property TenantId As String
    parameters: []
    return:
      type: System.String
  platform:
  - net40
  - rt
  - sl
  - wp8
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheItem.UniqueId
  id: UniqueId
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheItem
  langs:
  - csharp
  - vb
  name: UniqueId
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheItem.UniqueId
  type: Property
  source:
    remote:
      path: src/ADAL.Common/TokenCacheItem.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.Common/TokenCacheItem.cs
    startLine: 101
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Gets the user's unique Id.
  example: []
  syntax:
    content: public string UniqueId { get; }
    content.vb: Public ReadOnly Property UniqueId As String
    parameters: []
    return:
      type: System.String
  platform:
  - net40
  - rt
  - sl
  - wp8
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheItem.DisplayableId
  id: DisplayableId
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheItem
  langs:
  - csharp
  - vb
  name: DisplayableId
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheItem.DisplayableId
  type: Property
  source:
    remote:
      path: src/ADAL.Common/TokenCacheItem.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.Common/TokenCacheItem.cs
    startLine: 106
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Gets the user's displayable Id.
  example: []
  syntax:
    content: public string DisplayableId { get; }
    content.vb: Public ReadOnly Property DisplayableId As String
    parameters: []
    return:
      type: System.String
  platform:
  - net40
  - rt
  - sl
  - wp8
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheItem.AccessToken
  id: AccessToken
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheItem
  langs:
  - csharp
  - vb
  name: AccessToken
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheItem.AccessToken
  type: Property
  source:
    remote:
      path: src/ADAL.Common/TokenCacheItem.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.Common/TokenCacheItem.cs
    startLine: 111
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Gets the Access Token requested.
  example: []
  syntax:
    content: public string AccessToken { get; }
    content.vb: Public ReadOnly Property AccessToken As String
    parameters: []
    return:
      type: System.String
  platform:
  - net40
  - rt
  - sl
  - wp8
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheItem.RefreshToken
  id: RefreshToken
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheItem
  langs:
  - csharp
  - vb
  name: RefreshToken
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheItem.RefreshToken
  type: Property
  source:
    remote:
      path: src/ADAL.Common/TokenCacheItem.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.Common/TokenCacheItem.cs
    startLine: 116
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: 'Gets the Refresh Token associated with the requested Access Token. Note: not all operations will return a Refresh Token.'
  example: []
  syntax:
    content: public string RefreshToken { get; }
    content.vb: Public ReadOnly Property RefreshToken As String
    parameters: []
    return:
      type: System.String
  platform:
  - net40
  - rt
  - sl
  - wp8
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheItem.IdToken
  id: IdToken
  parent: Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheItem
  langs:
  - csharp
  - vb
  name: IdToken
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory.TokenCacheItem.IdToken
  type: Property
  source:
    remote:
      path: src/ADAL.Common/TokenCacheItem.cs
      branch: master
      repo: https://github.com/AzureAD/azure-activedirectory-library-for-dotnet.git
    path: src/ADAL.Common/TokenCacheItem.cs
    startLine: 121
  assemblies:
  - Microsoft.IdentityModel.Clients.ActiveDirectory
  namespace: Microsoft.IdentityModel.Clients.ActiveDirectory
  summary: Gets the entire Id Token if returned by the service or null if no Id Token is returned.
  example: []
  syntax:
    content: public string IdToken { get; }
    content.vb: Public ReadOnly Property IdToken As String
    parameters: []
    return:
      type: System.String
  platform:
  - net40
  - rt
  - sl
  - wp8
references:
- uid: Microsoft.IdentityModel.Clients.ActiveDirectory
  isExternal: false
  name: Microsoft.IdentityModel.Clients.ActiveDirectory
  fullName: Microsoft.IdentityModel.Clients.ActiveDirectory
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.DateTimeOffset
  parent: System
  isExternal: true
  name: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: DateTimeOffset
  isExternal: true
  name: DateTimeOffset
  fullName: DateTimeOffset
metadata: {}
